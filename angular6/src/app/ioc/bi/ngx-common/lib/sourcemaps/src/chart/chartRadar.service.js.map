{"version":3,"sources":["src/chart/chartRadar.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartRadar.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UpdateEchartOptionsService } from './common/updateechartOptions.service';\r\nimport { Render } from './render';\r\n\r\nimport * as _ from 'lodash';\r\nvar eCharts = require('echarts');\r\n\r\n@Injectable()\r\n\r\nexport class ChartRadarService {\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private updateEchartOptions: UpdateEchartOptionsService\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        let render = new Render(containerDom, option, null, eCharts);\r\n\r\n        render.addClick(chartConfig, relations, this.activatedRoute);\r\n\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(_data) {\r\n        var chartConfig = _data.chartConfig;\r\n        var casted_keys = _data.keys;\r\n        var casted_values = _data.series;\r\n        var aggregate_data = _data.data;\r\n\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            return key.join('-');\r\n        });\r\n        var string_values = _.map(casted_values, function (value) {\r\n            return value.join('-');\r\n        });\r\n        var data = [];\r\n        var max;\r\n        var indicator = [];\r\n        if (chartConfig.drawBy === 'row') {\r\n            for (var i = 0; i < string_keys.length; i++) {\r\n                var d = {value: [], name: string_keys[i]};\r\n                for (var j = 0; j < casted_values.length; j++) {\r\n                    d.value[j] = aggregate_data[j][i];\r\n                    var n = Number(aggregate_data[j][i]);\r\n                    if (_.isUndefined(max) || n > max) {\r\n                        max = n;\r\n                    }\r\n                }\r\n                data.push(d);\r\n            }\r\n            for (var j = 0; j < casted_values.length; j++) {\r\n                indicator.push({name: casted_values[j], max: max * 1.05});\r\n            }\r\n        } else {\r\n            for (var i = 0; i < string_values.length; i++) {\r\n                var d = {value: [], name: string_values[i]};\r\n                for (var j = 0; j < string_keys.length; j++) {\r\n                    d.value[j] = aggregate_data[i][j];\r\n                    var n = Number(aggregate_data[i][j]);\r\n                    if (_.isUndefined(max) || n > max) {\r\n                        max = n;\r\n                    }\r\n                }\r\n                data.push(d);\r\n            }\r\n            for (var j = 0; j < string_keys.length; j++) {\r\n                indicator.push({name: string_keys[j], max: max * 1.05});\r\n            }\r\n        }\r\n\r\n\r\n        var echartOption = {\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            toolbox: false,\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: chartConfig.drawBy === 'row' ? string_keys : string_values\r\n            },\r\n            radar: {\r\n                indicator: indicator\r\n            },\r\n            series: [{\r\n                name: 'radar',\r\n                type: 'radar',\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        areaStyle: {color: 'rgba(0,250,0,0.3)'}\r\n                    }\r\n                },\r\n                data: data\r\n            }]\r\n        };\r\n\r\n        this.updateEchartOptions.updateEchartOptions(chartConfig.option, echartOption);\r\n\r\n        return echartOption;\r\n    };\r\n}"]}