{"version":3,"sources":["src/chart/common/updateechartOptions.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,0BAA4B;AAC5B,kDAAsD;AAItD;IAEI;IACA,CAAC;IAEM,wDAAmB,GAA1B,UAA2B,SAAS,EAAE,MAAM;QACxC,IAAI,SAAS,EAAE;YACX,IAAI,SAAS,CAAC,QAAQ,IAAI,IAAI,EAAE;gBAC5B,MAAM,CAAC,QAAQ,GAAG;oBACd,IAAI,EAAE,IAAI;oBACV,KAAK,EAAG,CAAC;oBACT,GAAG,EAAE,GAAG;iBACX,CAAC;aACL;YAED,SAAS;YACT,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,kCAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAClF,IAAI,SAAS,CAAC,UAAU,IAAI,KAAK,EAAE;gBAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;gBACvB,MAAM,CAAC,MAAM,CAAC,IAAI,GAAE,KAAK,CAAC;aAC7B;iBAAM;gBACH,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,kCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxF,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC/D,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC/D,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;aACjF;YAED,OAAO;YACP,IAAI,SAAS,CAAC,UAAU,IAAI,IAAI,EAAE;gBAC9B,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC/D,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;aACxE;SACJ;IACL,CAAC;IAAA,CAAC;IAnCO,0BAA0B;QAFtC,iBAAU,EAAE;;OAEA,0BAA0B,CAoCtC;IAAD,iCAAC;CApCD,AAoCC,IAAA;AApCY,gEAA0B","file":"../../../../src/chart/common/updateechartOptions.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { CHART_BASIC_OPTION } from '../chart-options';\r\n\r\n@Injectable()\r\n\r\nexport class UpdateEchartOptionsService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public updateEchartOptions(tuningOpt, rawOpt) {\r\n        if (tuningOpt) {\r\n            if (tuningOpt.dataZoom == true) {\r\n                rawOpt.dataZoom = {\r\n                    show: true,\r\n                    start : 0,\r\n                    end: 100\r\n                };\r\n            }\r\n    \r\n            // legend\r\n            rawOpt.grid === undefined ? rawOpt.grid = _.clone(CHART_BASIC_OPTION.grid) : null;\r\n            if (tuningOpt.legendShow == false) {\r\n                rawOpt.grid.top = '5%';\r\n                rawOpt.legend.show =false;\r\n            } else {\r\n                rawOpt.legend === undefined ? rawOpt.legend = _.clone(CHART_BASIC_OPTION.legend) : null;\r\n                tuningOpt.legendX ? rawOpt.legend.x = tuningOpt.legendX : null;\r\n                tuningOpt.legendY ? rawOpt.legend.y = tuningOpt.legendY : null;\r\n                tuningOpt.legendOrient ? rawOpt.legend.orient = tuningOpt.legendOrient : null;\r\n            }\r\n    \r\n            // grid\r\n            if (tuningOpt.gridCustom == true) {\r\n                tuningOpt.gridTop ? rawOpt.grid.top = tuningOpt.gridTop : null;\r\n                tuningOpt.gridBottom ? rawOpt.grid.bottom = tuningOpt.gridBottom : null;\r\n                tuningOpt.gridLeft ? rawOpt.grid.left = tuningOpt.gridLeft : null;\r\n                tuningOpt.gridRight ? rawOpt.grid.right = tuningOpt.gridRight : null;\r\n            }\r\n        }\r\n    };\r\n}"]}