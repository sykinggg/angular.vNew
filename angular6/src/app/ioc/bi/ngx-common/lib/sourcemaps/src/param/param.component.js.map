{"version":3,"sources":["src/param/param.component.ts"],"names":[],"mappings":"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","file":"../../../src/param/param.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { AfterDialogInit, DialogService, DialogResult } from 'core-services/core';\r\n\r\n@Component({\r\n    template: require('./param.component.html!text')\r\n})\r\n\r\nexport class ParamComponent implements OnInit, AfterDialogInit {\r\n    alerts: Array<any>;\r\n    paramTypes: Array<any>;\r\n    param: any;\r\n    status: any;\r\n    boardDataset: any;\r\n\r\n    constructor(\r\n        private translateService: TranslateService,\r\n        private dialogService: DialogService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.paramTypes = [{\r\n            name: this.translateService.instant('CONFIG.DASHBOARD.PARAM_TYPE_PICKER'),\r\n            value: 'picker'\r\n        }, {\r\n            name: this.translateService.instant('CONFIG.DASHBOARD.PARAM_TYPE_SLIDER'),\r\n            value: 'slider'\r\n        }, {\r\n            name: this.translateService.instant('CONFIG.DASHBOARD.PARAM_TYPE_DATE_RANGE'),\r\n            value: 'date_range'\r\n        }, {\r\n            name: this.translateService.instant('CONFIG.DASHBOARD.PARAM_TYPE_SELECTOR'),\r\n            value: 'selector'\r\n        }];\r\n    }\r\n\r\n    afterDialogInit(dialog: DialogResult, modalContent: any) {\r\n        let owner = this;\r\n        let oldClose = dialog.modal.close;\r\n\r\n        dialog.modal.close = () => {\r\n            if (this.param.name) {\r\n                oldClose(true);\r\n            } else {\r\n                owner.dialogService.alert(this.translateService.instant('CONFIG.DASHBOARD.ENTER_PARAMETER_NAME'), 'COMMON.TIP', 0);\r\n            }\r\n        };\r\n\r\n        this.param = dialog.data.param;\r\n        this.status = dialog.data.status;\r\n        this.boardDataset = dialog.data.boardDataset;\r\n        if (!this.param.paramType) {\r\n            this.param.paramType = 'picker';\r\n        }\r\n        if (!this.param.cfg) {\r\n            this.param.cfg = {};\r\n        }\r\n    }\r\n\r\n    closeAlert(alert: any) {\r\n        this.alerts.splice(this.alerts.indexOf(alert), 1);\r\n    }\r\n\r\n    add(selectedDataset, column) {\r\n        let v = {...selectedDataset};\r\n        let paramCol = this.param.col;\r\n        let haveCol = null;\r\n\r\n        delete v.columns;\r\n        v.column = column;\r\n        for (let i = 0; i < paramCol.length; i++) {\r\n            (paramCol[i].column === v.column && paramCol[i].name === v.name) ? haveCol = true : null;\r\n        }\r\n        (!haveCol || this.param.col === []) ? this.param.col.push(v) : null;\r\n    }\r\n\r\n    deleteColumn(index) {\r\n        this.param.col.splice(index, 1);\r\n    }\r\n\r\n    isSelected(column: string, dataset: string) {\r\n        return this.param.col.some((item) => {\r\n            return item.name === dataset && item.column === column;\r\n        });\r\n    }\r\n}"]}