{"version":3,"sources":["src/chart/chartChinaMapBmap.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,8EAA4E;AAC5E,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAIhC;IACI,kCACY,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;IACzD,CAAC;IAEG,yCAAM,GAAb,UAAc,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK;QACrD,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,YAAY,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;YACrF,OAAO;SACV;QACD,IAAI,MAAM,CAAC;QACX,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAC5C,OAAO,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACpH,CAAC;IAAA,CAAC;IAEK,8CAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAE9B,IAAI,QAAQ,CAAC;QACb,IAAI,KAAK,CAAC;QACV,IAAI,KAAK,CAAC;QACV,IAAI,MAAM,CAAC;QACX,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,kBAAkB,CAAC;QACvB,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,UAAU,CAAC;QACf,KAAI,IAAI,WAAW,IAAI,IAAI,CAAC,YAAY,EAAC;YACrC,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;YACpD,eAAe;YACf,QAAQ,GAAG,IAAI,CAAC;YAChB,KAAK,GAAG,IAAI,CAAC;YACb,KAAK,GAAG,IAAI,CAAC;YACb,IAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;gBACzB,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC;iBAAK,IAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;gBAChC,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpD,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;YAED,sBAAsB;YACtB,QAAQ,SAAS,EAAC;gBACd,KAAK,UAAU;oBACX,IAAI,QAAQ,GAAG,EAAE,CAAC;oBAClB,IAAG,KAAK,IAAI,KAAK,EAAC;wBACd,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;4BACrD,MAAM,GAAG,IAAI,CAAC;4BACd,GAAG,GAAG,IAAI,CAAC;4BACX,GAAG,GAAG,IAAI,CAAC;4BACX,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;gCACvB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCAClC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BACrC;iCAAK,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;gCAC9B,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCAChD,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BACnD;4BAAA,CAAC;4BAEF,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,EAAC;gCAC7B,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ;oCAC7B,MAAM,EAAE,MAAM;oCACd,MAAM,EAAE,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC;wCAClB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iCAClB,CAAC,CAAC;gCAEH,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;oCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iCAC1C;gCACD,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;oCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iCAC1C;6BACJ;yBACJ;wBAAA,CAAC;wBAEF,IAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;4BACnB,UAAU,CAAC,IAAI,CACX;gCACI,IAAI,EAAC,QAAQ;gCACb,IAAI,EAAE,OAAO;gCACb,gBAAgB,EAAE,MAAM;gCACxB,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;gCACzB,UAAU,EAAE,CAAC;gCACb,MAAM,EAAE;oCACJ,IAAI,EAAE,IAAI;oCACV,MAAM,EAAE,CAAC;oCACT,WAAW,EAAE,CAAC;oCACd,MAAM,EAAE,OAAO;oCACf,UAAU,EAAE,CAAC;iCAChB;gCACD,SAAS,EAAE;oCACP,MAAM,EAAE;wCACJ,KAAK,EAAE,CAAC;wCACR,OAAO,EAAE,GAAG;wCACZ,SAAS,EAAE,GAAG;qCACjB;iCACJ;gCACD,IAAI,EAAE,QAAQ;6BACjB,CACJ,CAAC;4BACF,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBAC7B;qBACJ;oBACD,MAAM;gBACV,KAAK,MAAM;oBACP,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;wBACrD,MAAM,GAAG,IAAI,CAAC;wBACd,GAAG,GAAG,IAAI,CAAC;wBACX,GAAG,GAAG,IAAI,CAAC;wBACX,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;4BACvB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBACrC;6BAAK,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;4BAC9B,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChD,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnD;wBAAA,CAAC;wBAEF,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;4BACf,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAExD,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;6BAC1C;4BACD,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;6BAC1C;yBACJ;qBACJ;oBACD,IAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;wBACtB,UAAU,CAAC,IAAI,CACX;4BACI,IAAI,EAAE,WAAW;4BACjB,IAAI,EAAE,SAAS;4BACf,gBAAgB,EAAE,MAAM;4BACxB,IAAI,EAAE,WAAW;yBACpB,CACJ,CAAC;wBACF,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAChC;oBACD,MAAM;gBAEV,KAAK,SAAS;oBACV,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;wBACrD,MAAM,GAAG,IAAI,CAAC;wBACd,GAAG,GAAG,IAAI,CAAC;wBACX,GAAG,GAAG,IAAI,CAAC;wBACX,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;4BACvB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClC,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBACrC;6BAAK,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;4BAC9B,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACzB,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChD,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnD;wBAAA,CAAC;wBAEF,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;4BACf,WAAW,CAAC,IAAI,CAAC;gCACb,IAAI,EAAC,MAAM;gCACX,KAAK,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC9C,CAAC,CAAC;4BACH,IAAG,UAAU,IAAI,IAAI,IAAI,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gCAC9D,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC5C;4BAED,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;6BAC1C;4BACD,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gCACjD,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;6BAC1C;yBACJ;qBACJ;oBACD,IAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;wBACtB,UAAU,CAAC,IAAI,CACX;4BACI,IAAI,EAAE,WAAW;4BACjB,IAAI,EAAE,SAAS;4BACf,gBAAgB,EAAE,MAAM;4BACxB,IAAI,EAAE,WAAW;4BACjB,UAAU,EAAG,UAAU,GAAG;gCACtB,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC;4BACpC,CAAC;4BACD,KAAK,EAAE;gCACH,MAAM,EAAE;oCACJ,SAAS,EAAE,KAAK;oCAChB,QAAQ,EAAE,OAAO;oCACjB,IAAI,EAAE,KAAK;iCACd;gCACD,QAAQ,EAAE;oCACN,IAAI,EAAE,IAAI;iCACb;6BACJ;yBACJ,CACJ,CAAC;wBACF,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAChC;aACR;YACD,CAAC,EAAE,CAAC;SACP;QAGD,IAAI,UAAU,GAAG;YACb,CAAC,EAAE,UAAU;YACb,CAAC,EAAE,SAAS;SACf,CAAC;QACF,UAAU;QACV,IAAI,IAAI,GAAG;YACP,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE;gBACN,SAAS,EAAE,CAAC;wBACR,aAAa,EAAE,OAAO;wBACtB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,MAAM;wBACrB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,SAAS;wBACxB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,SAAS;wBACxB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,SAAS;wBACxB,aAAa,EAAE,QAAQ;wBACvB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,UAAU;wBACzB,aAAa,EAAE,UAAU;wBACzB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,UAAU;wBACzB,aAAa,EAAE,eAAe;wBAC9B,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,KAAK;wBACpB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,OAAO;wBACtB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,QAAQ;wBACvB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,SAAS;wBACxB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,OAAO;wBACtB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,UAAU;wBACzB,aAAa,EAAE,QAAQ;wBACvB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,EAAE;wBACC,aAAa,EAAE,UAAU;wBACzB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,UAAU;wBACzB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,OAAO,EAAE,SAAS;yBACrB;qBACJ,EAAE;wBACC,aAAa,EAAE,OAAO;wBACtB,aAAa,EAAE,KAAK;wBACpB,SAAS,EAAE;4BACP,YAAY,EAAE,KAAK;yBACtB;qBACJ,CAAC;aACL;SACJ,CAAC;QACF,IAAK,SAAS,GAAG;YACb,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,UAAU;gBACxB,IAAI,EAAE,UAAU;aACnB;YACD,SAAS,EAAE;gBACP,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,QAAQ;gBACb,wBAAwB;gBACxB,OAAO,EAAE;oBACL,KAAK,EAAE,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC,CAAC,OAAO,EAAE;iBACnD;gBACD,UAAU,EAAG,IAAI;gBACjB,SAAS,EAAE;oBACP,KAAK,EAAE,SAAS;iBACnB;aACJ;YACD,OAAO,EAAE;gBACL,OAAO,EAAE,MAAM;aAClB;YACD,MAAM,EAAC,UAAU;SACpB,CAAC;QAEF,OAAO,SAAS,CAAC;IACrB,CAAC;IAAA,CAAC;IAjWO,wBAAwB;QAFpC,iBAAU,EAAE;iDAI4B,kDAAuB;OAFnD,wBAAwB,CAkWpC;IAAD,+BAAC;CAlWD,AAkWC,IAAA;AAlWY,4DAAwB","file":"../../../src/chart/chartChinaMapBmap.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CBoardBMapRenderService } from './render/cBoardBMapRender.service';\r\nvar echart = require('echarts');\r\n\r\n@Injectable()\r\n\r\nexport class ChartChinaMapBMapService {\r\n    constructor(\r\n        private cBoardBMapRenderService: CBoardBMapRenderService\r\n    ) {}\r\n\r\n    public render(containerDom, option, scope, persist, drill) {\r\n        if (option == null) {\r\n            containerDom.html(\"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">No Data!</div>\");\r\n            return;\r\n        }\r\n        var height;\r\n        scope ? height = scope.myheight - 20 : null;\r\n        return this.cBoardBMapRenderService.CBoardBMapRender(containerDom, option, null, echart).chart(height, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var optionData = [];\r\n        var seriesData = [];\r\n        var data_keys = data.keys;\r\n        var data_series = data.series;\r\n\r\n        var fromName;\r\n        var fromN;\r\n        var fromL;\r\n        var toName;\r\n        var toN;\r\n        var toL;\r\n        var effectScatterValue;\r\n        var max;\r\n        var min;\r\n        var j = 0;\r\n        var maxScatter;\r\n        for(var serieConfig in data.seriesConfig){\r\n            var serieType = data.seriesConfig[serieConfig].type;\r\n            //重置为null，防止脏数据\r\n            fromName = null;\r\n            fromN = null;\r\n            fromL = null;\r\n            if(data_series[j].length > 3){\r\n                fromName = data_series[j][2];\r\n                fromN = parseFloat(data_series[j][0]);\r\n                fromL = parseFloat(data_series[j][1]);\r\n            }else if(data_series[j].length == 3){\r\n                fromName = data_series[j][1];\r\n                fromN = parseFloat(data_series[j][0].split(\",\")[0]);\r\n                fromL = parseFloat(data_series[j][0].split(\",\")[1]);\r\n            }\r\n\r\n            //根据不同的地图类型获取不同的series\r\n            switch (serieType){\r\n                case \"markLine\" :\r\n                    var lineData = [];\r\n                    if(fromN && fromL){\r\n                        for(var i = 0; data_keys[0] && i < data_keys.length; i++){\r\n                            toName = null;\r\n                            toN = null;\r\n                            toL = null;\r\n                            if(data_keys[i].length > 2){\r\n                                toName = data_keys[i][2];\r\n                                toN = parseFloat(data_keys[i][0]);\r\n                                toL = parseFloat(data_keys[i][1]);\r\n                            }else if(data_keys[i].length == 2){\r\n                                toName = data_keys[i][1];\r\n                                toN = parseFloat(data_keys[i][0].split(\",\")[0]);\r\n                                toL = parseFloat(data_keys[i][0].split(\",\")[1]);\r\n                            };\r\n\r\n                            if(data.data[j][i] && toN && toL){\r\n                                lineData.push({fromName: fromName,\r\n                                    toName: toName,\r\n                                    coords: [[fromN,fromL],\r\n                                        [toN, toL]]\r\n                                });\r\n\r\n                                if(max == null || max <= parseFloat(data.data[j][i])){\r\n                                    max = parseFloat(data.data[j][i]) + 10;\r\n                                }\r\n                                if(min == null || min >= parseFloat(data.data[j][i])){\r\n                                    min = parseFloat(data.data[j][i]) - 10;\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        if(lineData.length > 0){\r\n                            seriesData.push(\r\n                                {\r\n                                    name:fromName,\r\n                                    type: 'lines',\r\n                                    coordinateSystem: 'bmap',\r\n                                    symbol: ['none', 'arrow'],\r\n                                    symbolSize: 6,\r\n                                    effect: {\r\n                                        show: true,\r\n                                        period: 6,\r\n                                        trailLength: 0,\r\n                                        symbol: 'arrow',\r\n                                        symbolSize: 4\r\n                                    },\r\n                                    lineStyle: {\r\n                                        normal: {\r\n                                            width: 1,\r\n                                            opacity: 0.6,\r\n                                            curveness: 0.2\r\n                                        }\r\n                                    },\r\n                                    data: lineData\r\n                                }\r\n                            );\r\n                            optionData.push(fromName);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"heat\" :\r\n                    var heatmapData = [];\r\n                    for(var i = 0; data_keys[0] && i < data_keys.length; i++){\r\n                        toName = null;\r\n                        toN = null;\r\n                        toL = null;\r\n                        if(data_keys[i].length > 2){\r\n                            toName = data_keys[i][2];\r\n                            toN = parseFloat(data_keys[i][0]);\r\n                            toL = parseFloat(data_keys[i][1]);\r\n                        }else if(data_keys[i].length == 2){\r\n                            toName = data_keys[i][1];\r\n                            toN = parseFloat(data_keys[i][0].split(\",\")[0]);\r\n                            toL = parseFloat(data_keys[i][0].split(\",\")[1]);\r\n                        };\r\n\r\n                        if(data.data[j][i]){\r\n                            heatmapData.push([toN,toL,parseFloat(data.data[j][i])]);\r\n\r\n                            if(max == null || max <= parseFloat(data.data[j][i])){\r\n                                max = parseFloat(data.data[j][i]) + 10;\r\n                            }\r\n                            if(min == null || min >= parseFloat(data.data[j][i])){\r\n                                min = parseFloat(data.data[j][i]) - 10;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(heatmapData.length > 0){\r\n                        seriesData.push(\r\n                            {\r\n                                name: serieConfig,\r\n                                type: 'heatmap',\r\n                                coordinateSystem: 'bmap',\r\n                                data: heatmapData\r\n                            }\r\n                        );\r\n                        optionData.push(serieConfig);\r\n                    }\r\n                    break;\r\n\r\n                case \"scatter\" :\r\n                    var scatterData = [];\r\n                    for(var i = 0; data_keys[0] && i < data_keys.length; i++){\r\n                        toName = null;\r\n                        toN = null;\r\n                        toL = null;\r\n                        if(data_keys[i].length > 2){\r\n                            toName = data_keys[i][2];\r\n                            toN = parseFloat(data_keys[i][0]);\r\n                            toL = parseFloat(data_keys[i][1]);\r\n                        }else if(data_keys[i].length == 2){\r\n                            toName = data_keys[i][1];\r\n                            toN = parseFloat(data_keys[i][0].split(\",\")[0]);\r\n                            toL = parseFloat(data_keys[i][0].split(\",\")[1]);\r\n                        };\r\n\r\n                        if(data.data[j][i]){\r\n                            scatterData.push({\r\n                                name:toName,\r\n                                value:[toN,toL,parseFloat(data.data[j][i])]\r\n                            });\r\n                            if(maxScatter == null || maxScatter < parseFloat(data.data[j][i])){\r\n                                maxScatter = parseFloat(data.data[j][i]);\r\n                            }\r\n\r\n                            if(max == null || max <= parseFloat(data.data[j][i])){\r\n                                max = parseFloat(data.data[j][i]) + 10;\r\n                            }\r\n                            if(min == null || min >= parseFloat(data.data[j][i])){\r\n                                min = parseFloat(data.data[j][i]) - 10;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(scatterData.length > 0){\r\n                        seriesData.push(\r\n                            {\r\n                                name: serieConfig,\r\n                                type: 'scatter',\r\n                                coordinateSystem: 'bmap',\r\n                                data: scatterData,\r\n                                symbolSize : function (val) {\r\n                                    return val[2] * 30 / maxScatter;\r\n                                },\r\n                                label: {\r\n                                    normal: {\r\n                                        formatter: '{b}',\r\n                                        position: 'right',\r\n                                        show: false\r\n                                    },\r\n                                    emphasis: {\r\n                                        show: true\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                        optionData.push(serieConfig);\r\n                    }\r\n            }\r\n            j++;\r\n        }\r\n\r\n\r\n        var startPoint = {\r\n            x: 104.114129,\r\n            y: 37.550339\r\n        };\r\n        // 地图自定义样式\r\n        var bmap = {\r\n            center: [startPoint.x, startPoint.y],\r\n            zoom: 4,\r\n            roam: true,\r\n            mapStyle: {\r\n                styleJson: [{\r\n                    'featureType': 'water',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#d1d1d1'\r\n                    }\r\n                }, {\r\n                    'featureType': 'land',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#f3f3f3'\r\n                    }\r\n                }, {\r\n                    'featureType': 'railway',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'highway',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#fdfdfd'\r\n                    }\r\n                }, {\r\n                    'featureType': 'highway',\r\n                    'elementType': 'labels',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'arterial',\r\n                    'elementType': 'geometry',\r\n                    'stylers': {\r\n                        'color': '#fefefe'\r\n                    }\r\n                }, {\r\n                    'featureType': 'arterial',\r\n                    'elementType': 'geometry.fill',\r\n                    'stylers': {\r\n                        'color': '#fefefe'\r\n                    }\r\n                }, {\r\n                    'featureType': 'poi',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'green',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'subway',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'manmade',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#d1d1d1'\r\n                    }\r\n                }, {\r\n                    'featureType': 'local',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#d1d1d1'\r\n                    }\r\n                }, {\r\n                    'featureType': 'arterial',\r\n                    'elementType': 'labels',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }, {\r\n                    'featureType': 'boundary',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#fefefe'\r\n                    }\r\n                }, {\r\n                    'featureType': 'building',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'color': '#d1d1d1'\r\n                    }\r\n                }, {\r\n                    'featureType': 'label',\r\n                    'elementType': 'all',\r\n                    'stylers': {\r\n                        'visibility': 'off'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n        var  mapOption = {\r\n            bmap: bmap,\r\n            legend: {\r\n                orient: 'vertical',\r\n                top: 'top',\r\n                left: 'left',\r\n                selectedMode: 'multiple',\r\n                data: optionData\r\n            },\r\n            visualMap: {\r\n                min: min,\r\n                max: max,\r\n                left: 'right',\r\n                top: 'bottom',\r\n                //text: ['High', 'Low'],\r\n                inRange: {\r\n                    color: ['#d94e5d','#eac736','#50a3ba'].reverse()\r\n                },\r\n                calculable : true,\r\n                textStyle: {\r\n                    color: '#d94e5d'\r\n                }\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            series:seriesData\r\n        };\r\n\r\n        return mapOption;\r\n    };\r\n}"]}