{"version":3,"sources":["src/chart/render/kpiRender.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAKzC;IAEI;QA6CA,aAAQ,GAAG,mYAIJ,CAAC;IAjDQ,CAAC;IAKV,gDAAe,GAAtB,UAAuB,WAAW,EAAE,OAAO;QACvC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,gBAAgB;QAC9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAAA,CAAC;IAEF,qCAAI,GAAJ,UAAK,OAAO;QACR,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,GAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,OAAO,EAAE;YACT,UAAU,CAAC;gBACP,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBACzC,oBAAoB;gBACpB,oCAAoC;gBACpC,kCAAkC;gBAClC,+BAA+B;gBAC/B,mDAAmD;gBACnD,wBAAwB;gBACxB,KAAK;YACT,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,OAAO,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAC,CAAC;YAC1E,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAAA,CAAC;IAEF,+CAAc,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO,UAAU,CAAC;YACd,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAA;IACL,CAAC;IAAA,CAAC;IAEF,mCAAE,GAAF;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5C,CAAC;IAAA,CAAC;IA7CO,sBAAsB;QAHlC,iBAAU,EAAE;;OAGA,sBAAsB,CAoDlC;IAAD,6BAAC;CApDD,AAoDC,IAAA;AApDY,wDAAsB","file":"../../../../src/chart/render/kpiRender.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nvar html2canvas = require('html2canvas');\r\n\r\n@Injectable()\r\n\r\n\r\nexport class CBoardKpiRenderService {\r\n\r\n    constructor () {}\r\n\r\n    container;\r\n    options;\r\n    html2canvas;\r\n    public CBoardKpiRender(jqContainer, options) {\r\n        this.container = jqContainer; // jquery object\r\n        this.options = options;\r\n\r\n        return this;\r\n    };\r\n\r\n    html(persist) {\r\n        var self = this;\r\n        var temp: any = \"\" + self.template;\r\n        var html = temp.render(self.options);\r\n        if (persist) {\r\n            setTimeout(function () {\r\n                self.container.css('background', '#fff');\r\n                // html2canvas api改变\r\n                // self.html2canvas(self.container);\r\n                // console.log('CBoardKpiRender');\r\n                // console.log(self.container);\r\n                // html2canvas(self.container).then((res: any) => {\r\n                //     console.log(res);\r\n                // })\r\n            }, 1000);\r\n            persist.data = {name: self.options.kpiName, value: self.options.kpiValue};\r\n            persist.type = \"kpi\";\r\n        }\r\n        return html;\r\n    };\r\n    \r\n    realTimeTicket() {\r\n        var self = this;\r\n        return function (o) {\r\n            $(self.container).find('h3').html(o.kpiValue);\r\n        }\r\n    };\r\n    \r\n    do() {\r\n        var self = this;\r\n        $(self.container).html(self.rendered());\r\n    };\r\n    \r\n    template = `<div class=\"jumbotron pt-2 px-2 pb-0 mb-0 rounded-0 {style}\" style=\"position: relative; overflow: hidden;\">\r\n    <h3 class=\"p-2 h1\"><strong>{kpiValue}</strong></h3>\r\n    <p class=\"p-2 mb-4\">{kpiName}</p>\r\n    <i class=\"fa fa-signal fa-3x text-muted position-absolute\" aria-hidden=\"true\" style=\"top: 50%; right: 0.5rem; margin-top: -0.75em; opacity: 0.4;\"></i>\r\n    </div>`;\r\n}\r\n"]}