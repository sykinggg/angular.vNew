{"version":3,"sources":["src/chart/common/chartDataProcess.service.ts"],"names":[],"mappings":"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","file":"../../../../src/chart/common/chartDataProcess.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nvar numbro = require('numbro');\r\nimport * as _ from 'lodash'\r\n\r\n@Injectable()\r\n\r\nexport class ChartDataProcessService {\r\n\r\n    constructor(){}\r\n\r\n    public chartDataProcess(chartConfig,casted_keys, casted_values, aggregate_data,newValuesConfig) {\r\n        var keysList = casted_keys,\r\n            keyArr = [],\r\n            emptyList = [],\r\n            keyLength = chartConfig.keys.length,\r\n            rowHeaderLength = keysList[0] ? keysList[0].length : 0;\r\n        Array.matrix = function (numrows, numcols, initial) {\r\n            var arr = [];\r\n            for (var a = 0; a < numrows; ++a) {\r\n                var columns = [];\r\n                for (var s = 0; s < numcols; ++s) {\r\n                    columns[s] = initial;\r\n                }\r\n                arr[a] = columns;\r\n            }\r\n            return arr;\r\n        };\r\n        var table_data = Array.matrix(keysList.length, rowHeaderLength, 0);\r\n        for (var h = 0; h < rowHeaderLength; h++) {\r\n            for (var k = 0; k < keysList.length; k++) {\r\n                table_data[k][h] = {\r\n                    property: 'column_key',\r\n                    data: keysList[k][h]\r\n                };\r\n            }\r\n        }\r\n        for (var i = 0; i < casted_values.length; i++) {\r\n            var joined_values = casted_values[i].join('-');\r\n            var formatter = newValuesConfig[joined_values].formatter;\r\n            for (var j = 0; j < casted_keys.length; j++) {\r\n                if (!_.isUndefined(aggregate_data[i][j])) {\r\n                    var raw = aggregate_data[i][j];\r\n                    table_data[j][i + keyLength] = {\r\n                        property: 'data',\r\n                        data: formatter ? numbro(raw).format(formatter) : raw,\r\n                        raw: raw\r\n                    };\r\n                } else {\r\n                    table_data[j][i + keyLength] = {\r\n                        property: 'data',\r\n                        data: ''\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        var column_header = Array.matrix(chartConfig.groups.length + 1, casted_values.length, 0);\r\n        for (var n = 0; n < casted_values.length; n++) {\r\n            for (var m = 0; m < casted_values[n].length; m++) {\r\n                column_header[m][n] = {\r\n                    property: 'header_key',\r\n                    data: casted_values[n][m]\r\n                };\r\n            }\r\n        }\r\n        for (var y = 0; y < keyLength; y++) {\r\n            keyArr.push({\r\n                property: 'header_key',\r\n                column_header_header: true,\r\n                data: chartConfig.keys[y].alias ? chartConfig.keys[y].alias : chartConfig.keys[y].col\r\n            });\r\n            emptyList.push({\r\n                property: 'header_empty',\r\n                data: null\r\n            });\r\n        }\r\n        for (var j = 0; j < column_header.length; j++) {\r\n            j == column_header.length - 1 ?\r\n                column_header[j] = keyArr. concat(column_header[j]) :\r\n                column_header[j] = emptyList.concat(column_header[j]);\r\n        }\r\n        var chartData = {\r\n            chartConfig: chartConfig,\r\n            data: column_header.concat(table_data)\r\n        };\r\n        table_data = null;\r\n        column_header = null;\r\n        return chartData;\r\n    };\r\n}"]}