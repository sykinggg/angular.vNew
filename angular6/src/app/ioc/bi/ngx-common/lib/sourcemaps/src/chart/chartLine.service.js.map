{"version":3,"sources":["src/chart/chartLine.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartLine.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { Router } from '@angular/router';\r\nimport { CHART_BASIC_OPTION } from './chart-options';\r\nimport { Render } from './render';\r\nvar numbro = require(\"numbro\");\r\n\r\nimport { UpdateEchartOptionsService } from './common/updateechartOptions.service';\r\n\r\n@Injectable()\r\n\r\nexport class ChartLineService {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private updateEchartOptions: UpdateEchartOptionsService\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, persist, drill, relations?, chartConfig?) {\r\n        let render: any = new Render(containerDom, option);\r\n\r\n        render.addClick(chartConfig, relations, this.router);\r\n\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n\r\n        var chartConfig = data.chartConfig;\r\n        var casted_keys = data.keys;\r\n        var casted_values = data.series;\r\n        var aggregate_data = data.data;\r\n        var newValuesConfig = data.seriesConfig;\r\n        var series_data = new Array();\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            return key.join('-');\r\n        });\r\n        var tunningOpt = chartConfig.option;\r\n\r\n        var sum_data = [];\r\n        for (var j = 0; aggregate_data[0] && j < aggregate_data[0].length; j++) {\r\n            var sum = 0;\r\n            for (var i = 0; i < aggregate_data.length; i++) {\r\n                sum += aggregate_data[i][j] ? Number(aggregate_data[i][j]) : 0;\r\n                // change undefined to 0\r\n                aggregate_data[i][j] = aggregate_data[i][j] ? Number(aggregate_data[i][j]) : 0;\r\n            }\r\n            sum_data[j] = sum;\r\n        }\r\n\r\n        var line_type;\r\n        for (var i = 0; i < aggregate_data.length; i++) {\r\n            var joined_values = casted_values[i].join('-');\r\n            var s = _.clone(newValuesConfig[joined_values]);\r\n            s.name = joined_values;\r\n            s.data = aggregate_data[i];\r\n            s.barMaxWidth = 40;\r\n            line_type = s.type;\r\n            if (s.type == 'stackbar') {\r\n                s.type = 'bar';\r\n                s.stack = s.valueAxisIndex.toString();\r\n            } else if (s.type == 'polarbar') {\r\n                s.type = 'bar';\r\n                s.stack = s.valueAxisIndex.toString();\r\n                s.coordinateSystem = 'polar';\r\n            } else if (s.type == 'percentbar') {\r\n                if (chartConfig.valueAxis == 'horizontal') {\r\n                    s.data = _.map(aggregate_data[i], function (e, i) {\r\n                        return (e / sum_data[i] * 100).toFixed(2);\r\n                    })\r\n                } else {\r\n                    s.data = _.map(aggregate_data[i], function (e, i) {\r\n                        return [i, (e / sum_data[i] * 100).toFixed(2), e];\r\n                    });\r\n                }\r\n                s.type = 'bar';\r\n                s.stack = s.valueAxisIndex.toString();\r\n            } else if (s.type == \"arealine\") {\r\n                s.type = \"line\";\r\n                s.areaStyle = {normal: {}};\r\n            } else if (s.type == \"stackline\") {\r\n                s.type = \"line\";\r\n                s.stack = s.valueAxisIndex.toString();\r\n                s.areaStyle = {normal: {}};\r\n            } else if (s.type == 'percentline') {\r\n                if (chartConfig.valueAxis == 'horizontal') {\r\n                    s.data = _.map(aggregate_data[i], function (e, i) {\r\n                        return (e / sum_data[i] * 100).toFixed(2);\r\n                    })\r\n                } else {\r\n                    s.data = _.map(aggregate_data[i], function (e, i) {\r\n                        return [i, (e / sum_data[i] * 100).toFixed(2), e];\r\n                    });\r\n                }\r\n                s.type = \"line\";\r\n                s.stack = s.valueAxisIndex.toString();\r\n                s.areaStyle = {normal: {}};\r\n            }\r\n            if (chartConfig.valueAxis == 'horizontal') {\r\n                s.xAxisIndex = s.valueAxisIndex;\r\n            } else {\r\n                s.yAxisIndex = s.valueAxisIndex;\r\n            }\r\n            series_data.push(s);\r\n        }\r\n\r\n        var valueAxis = _.clone(chartConfig.values);\r\n        _.each(valueAxis, function (axis, index) {\r\n            axis.axisLabel = {\r\n                formatter: function (value) {\r\n                    // return numbro(value).format(\"0a.[0000]\");\r\n                    return numbro(value).format(\"0a\");\r\n                }\r\n            };\r\n            if (axis.series_type == \"percentbar\" || axis.series_type == \"percentline\") {\r\n                axis.min = 0;\r\n                axis.max = 100;\r\n            } else {\r\n                axis.min = axis.min ? axis.min : null;\r\n                axis.max = axis.max ? axis.max : null;\r\n            }\r\n            if (+index > 0) {\r\n                axis.splitLine = false;\r\n            }\r\n            axis.scale = true;\r\n        });\r\n\r\n        if (tunningOpt) {\r\n            var labelInterval, labelRotate;\r\n            tunningOpt.ctgLabelInterval ? labelInterval = tunningOpt.ctgLabelInterval : 'auto';\r\n            tunningOpt.ctgLabelRotate ? labelRotate = tunningOpt.ctgLabelRotate : 0;\r\n        }\r\n\r\n\r\n        var categoryAxis = {\r\n            type: 'category',\r\n            data: string_keys,\r\n            axisLabel: {\r\n                interval: labelInterval,\r\n                rotate: labelRotate\r\n            },\r\n            boundaryGap: false\r\n        };\r\n\r\n        _.each(valueAxis, function (axis) {\r\n            var _stype = axis.series_type;\r\n            if (_stype.indexOf('bar') !== -1) {\r\n                categoryAxis.boundaryGap = true;\r\n            }\r\n        });\r\n\r\n        var echartOption: any = {\r\n            grid: _.clone(CHART_BASIC_OPTION.grid),\r\n            legend: {\r\n                data: _.map(casted_values, function (v) {\r\n                    return v.join('-');\r\n                })\r\n            },\r\n            tooltip: {\r\n                formatter: function (params) {\r\n                    var name = params[0].name;\r\n                    var s = name + \"</br>\";\r\n                    for (var i = 0; i < params.length; i++) {\r\n                        s += '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '\"></span>';\r\n                        if (params[i].value instanceof Array) {\r\n                            s += params[i].seriesName + \" : \" + params[i].value[1] + \"% (\" + params[i].value[2] + \")<br>\";\r\n                        } else {\r\n                            s += params[i].seriesName + \" : \" + params[i].value + \"<br>\";\r\n                        }\r\n                    }\r\n                    return s;\r\n                },\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: '#6a7985'\r\n                    }\r\n                }\r\n            },\r\n            series: series_data\r\n        };\r\n\r\n        if (line_type == 'polarbar') {\r\n            echartOption.angleAxis = chartConfig.valueAxis == 'horizontal' ? valueAxis : categoryAxis;\r\n            echartOption.radiusAxis = chartConfig.valueAxis == 'horizontal' ? categoryAxis : valueAxis;\r\n            echartOption.polar = {};\r\n        } else {\r\n            echartOption.xAxis = chartConfig.valueAxis == 'horizontal' ? valueAxis : categoryAxis;\r\n            echartOption.yAxis = chartConfig.valueAxis == 'horizontal' ? categoryAxis : valueAxis;\r\n        }\r\n\r\n        if (chartConfig.valueAxis === 'horizontal') {\r\n            echartOption.grid.left = 'left';\r\n            echartOption.grid.containLabel = true;\r\n            echartOption.grid.bottom = '5%';\r\n        }\r\n        if (chartConfig.valueAxis === 'vertical' && chartConfig.values.length > 1) {\r\n            echartOption.grid.right = 40;\r\n        }\r\n\r\n        // Apply tunning options\r\n        this.updateEchartOptions.updateEchartOptions(tunningOpt, echartOption);\r\n\r\n        return echartOption;\r\n    };\r\n}"]}