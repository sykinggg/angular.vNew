{"version":3,"sources":["src/chart/chartSankey.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartSankey.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CHART_BASIC_OPTION } from './chart-options';\r\nimport { Render } from './render';\r\n\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\n\r\nexport class ChartSankeyService {\r\n    constructor(private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        let render = new Render(containerDom, option);\r\n\r\n        render.addClick(chartConfig, relations, this.activatedRoute);\r\n\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var chartConfig = data.chartConfig;\r\n        var casted_keys = data.keys;\r\n        var casted_values = data.series;\r\n        var aggregate_data = data.data;\r\n        var newValuesConfig = data.seriesConfig;\r\n\r\n        var nodes = [];\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            var s = key.join('-');\r\n            if (!_.find(nodes, function (e) { return e.name == s; })) {\r\n                nodes.push({ name: s });\r\n            }\r\n            return s;\r\n        });\r\n        _.each(casted_values, function (values) {\r\n            if (values.length > 1) {\r\n                values.splice(-1, 1);\r\n            }\r\n            var s = values.join('-');\r\n            if (!_.find(nodes, function (e) { return e.name == s; })) {\r\n                nodes.push({ name: s });\r\n            }\r\n        });\r\n        var links = [];\r\n        for (var i = 0; i < aggregate_data.length; i++) {\r\n            for (var j = 0; j < aggregate_data[i].length; j++) {\r\n                if (!_.isUndefined(aggregate_data[i][j])) {\r\n                    links.push({\r\n                        source: string_keys[j],\r\n                        target: casted_values[i].join('-'),\r\n                        value: aggregate_data[i][j]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        var echartOption: any = {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                triggerOn: 'mousemove'\r\n            },\r\n            toolbox: false,\r\n            series: [{\r\n                type: 'sankey',\r\n                layout: 'none',\r\n                data: nodes,\r\n                links: links,\r\n                itemStyle: {\r\n                    normal: {\r\n                        borderWidth: 1,\r\n                        borderColor: '#aaa'\r\n                    }\r\n                },\r\n                lineStyle: {\r\n                    normal: {\r\n                        color: 'source',\r\n                        curveness: 0.5\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n\r\n        var tunningOpt = chartConfig.option;\r\n        if (tunningOpt) {\r\n            if (tunningOpt.legendShow === false) {\r\n                echartOption.grid = {...CHART_BASIC_OPTION.grid};\r\n                echartOption.grid.top = '5%';\r\n                echartOption.legend.show = false;\r\n            }\r\n        }\r\n\r\n        return echartOption;\r\n    }\r\n}"]}