{"version":3,"sources":["src/data/update.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAM3C;IACI;IAAe,CAAC;IAEhB,oCAAY,GAAZ,UAAa,MAAM;QACf,IAAI,cAAc,GAAG,UAAU,CAAC;YAC5B,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACvB,OAAO;oBACH,GAAG,EAAE,CAAC;oBACN,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,EAAE;iBACb,CAAC;aACL;YACD,OAAO,CAAC,CAAC;QACb,CAAC,CAAC;QAEF,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACjB,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;SACvB;QAED,QAAQ,MAAM,CAAC,UAAU,EAAE;YACvB,KAAK,KAAK;gBACN,cAAc;gBACd,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBAChB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;iBACtB;gBACD,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;oBACnB,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;iBACjC;gBACD,MAAM;SACb;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,KAAK;QACb,IAAI,KAAK,CAAC,MAAM,EAAE;YACd,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;gBACzB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;oBACX,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC;iBACvB;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IA5CQ,aAAa;QAJzB,iBAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;;OAEW,aAAa,CA6CzB;IAAD,oBAAC;CA7CD,AA6CC,IAAA;AA7CY,sCAAa","file":"../../../src/data/update.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class UpdateService {\r\n    constructor() {}\r\n\r\n    updateConfig(config) {\r\n        let toFilterConfig = function (e) {\r\n            if (typeof e === 'string') {\r\n                return {\r\n                    col: e,\r\n                    type: 'eq',\r\n                    values: []\r\n                };\r\n            }\r\n            return e;\r\n        };\r\n\r\n        config.keys = config.keys.map(toFilterConfig);\r\n        config.groups = config.groups.map(toFilterConfig);\r\n        if (!config.filters) {\r\n            config.filters = [];\r\n        }\r\n\r\n        switch (config.chart_type) {\r\n            case 'pie':\r\n                // the new pie\r\n                if (!config.groups) {\r\n                    config.groups = [];\r\n                }\r\n                break;\r\n            case 'line':\r\n                if (!config.valueAxis) {\r\n                    config.valueAxis = 'vertical';\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateBoard(board) {\r\n        if (board.layout) {\r\n            board.layout.rows.forEach(row => {\r\n                if (!row.type) {\r\n                    row.type = 'widget';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}"]}