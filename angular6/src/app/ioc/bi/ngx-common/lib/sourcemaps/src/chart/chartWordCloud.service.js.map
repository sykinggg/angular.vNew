{"version":3,"sources":["src/chart/chartWordCloud.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartWordCloud.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Render } from './render';\r\nrequire('echarts-wordcloud');\r\n\r\n@Injectable()\r\n\r\nexport class ChartWordCloudService {\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        if (option == null) {\r\n            containerDom.html(\"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">No Data!</div>\");\r\n            return null;\r\n        }\r\n        let height = scope ? scope.myheight - 20 : null;\r\n        let render = new Render(containerDom, option);\r\n\r\n        render.addClick(chartConfig, relations, this.activatedRoute);\r\n\r\n        return render.chart(height, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var names = data.keys;\r\n        var values = data.data;\r\n\r\n        var datas = [];\r\n        for (var i in names) {\r\n            datas.push({\r\n                name: names[i].join(\"-\"),\r\n                value: values[0][i]\r\n            })\r\n        }\r\n\r\n        var option = {\r\n            tooltip: {\r\n                formatter: \"{b} : {c}\"\r\n            },\r\n            toolbox: {\r\n                show : true,\r\n                feature : {\r\n                    mark : {show: false},\r\n                    dataView : {show: true, readOnly: true},\r\n                    //magicType : {show: true, type: ['line', 'bar']},\r\n                    restore : {show: false},\r\n                    saveAsImage : {show: true}\r\n                }\r\n            },\r\n            series: [{\r\n                type: 'wordCloud',\r\n                gridSize: 5,\r\n                sizeRange: [12, 50],\r\n                rotationRange: [-90, 90],\r\n                rotationStep: 45,\r\n                shape: 'circle',\r\n                textStyle: {\r\n                    normal: {\r\n                        color: function() {\r\n                            return 'rgb(' + [\r\n                                    Math.round(Math.random() * 160),\r\n                                    Math.round(Math.random() * 160),\r\n                                    Math.round(Math.random() * 160)\r\n                                ].join(',') + ')';\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowColor: '#333'\r\n                    }\r\n                },\r\n                data: datas\r\n            }]\r\n        };\r\n        return option;\r\n    };\r\n}"]}