{"version":3,"sources":["src/util/common.util.ts"],"names":[],"mappings":"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","file":"../../../src/util/common.util.js","sourcesContent":["var numbro = require('numbro');\r\n\r\nexport class CommonUtil {\r\n    /**\r\n     * Created by zyong on 2016/8/2.\r\n     */\r\n    // 生成随机字符串\r\n    static randomStr() {\r\n        return Math.random().toString(36).substring(2);\r\n    }\r\n\r\n    static render(template, context, tokenReg, hasDollarPrefix?, resultProcessor?) {\r\n        return template.replace(tokenReg, function (word, slash1, token, slash2) {\r\n            if (slash1 || slash2) {\r\n                return word.replace('\\\\', '');\r\n            }\r\n            let variables = token.replace(/\\s/g, '').split('.');\r\n            let currentObject = context;\r\n            let i, length, variable;\r\n\r\n            for (i = 0, length = variables.length; i < length; ++i) {\r\n                variable = variables[i];\r\n                currentObject = currentObject[variable];\r\n                if (currentObject === undefined || currentObject === null) {\r\n                    if (hasDollarPrefix === true) {\r\n                        return '${' + token + '}';\r\n                    } else {\r\n                        return '{' + token + '}';\r\n                    }\r\n                }\r\n            }\r\n            if (resultProcessor) {\r\n                return resultProcessor(currentObject);\r\n            } else {\r\n                return currentObject;\r\n            }\r\n        })\r\n    }\r\n\r\n    static dataStructure(d) {\r\n        let dataString = d ? d.toString() : '';\r\n        let isNumber = /^\\d+(\\.\\d+)?$/.test(dataString);\r\n        let intBit = isNumber ? dataString.split('\\.')[0].length : 0;\r\n        let floatBit = isNumber && dataString.indexOf('.') !== -1 ? dataString.split('\\.')[1].length : 0;\r\n\r\n        return {\r\n            isNumber: isNumber,\r\n            intBit: intBit,\r\n            floatBit: floatBit\r\n        };\r\n    }\r\n\r\n    static dataFormat(d) {\r\n        let ds = CommonUtil.dataStructure(d);\r\n\r\n        if (ds.isNumber) {\r\n            // return numbro(d).format('0.[0000]');\r\n            return numbro(d).format('0');\r\n        } else {\r\n            return d;\r\n        }\r\n    }\r\n\r\n    // Verify whether the aggregation expression is valid\r\n    static verifyAggExpRegx(exp: string) {\r\n        let result = {\r\n            isValid: false,\r\n            msg: ''\r\n        };\r\n\r\n        exp = exp.replace(/\\s/g, '').replace(/(sum|avg|count|max|min)\\([\\u4e00-\\u9fa5_a-zA-Z0-9]+\\)/g, '1');\r\n        try {\r\n            eval(exp);\r\n        } catch (e) {\r\n            result.msg = e.message;\r\n            return result;\r\n        }\r\n\r\n        result.isValid = true;\r\n        result.msg = 'ok!';\r\n\r\n        return result;\r\n    }\r\n\r\n    static cboardTranslate(path) {\r\n        let keys = path.split('.');\r\n        let exp = 'CB_I18N';\r\n        for (let i = 0; i < keys.length; i++) {\r\n            exp += '[\"' + keys[i] + '\"]';\r\n        }\r\n        let result = eval(exp);\r\n\r\n        return result ? result : path;\r\n    }\r\n\r\n\r\n    static UserException(message) {\r\n        this.message = message;\r\n        this.name = 'UserException';\r\n    }\r\n}"]}