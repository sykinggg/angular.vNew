{"version":3,"sources":["src/data/data.service.ts"],"names":[],"mappings":"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","file":"../../../src/data/data.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\n\r\nimport { ApiServer } from 'core-services/core';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { FilterData } from './data-type';\r\nimport { REQUEST_OPTIONS } from '../request-options';\r\nimport { UpdateService } from './update.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class DataService {\r\n    private datasetList: Array<any>;\r\n    public apis: any = {\r\n        datasets: 'datasets',\r\n        aggregate: 'aggregate'\r\n    };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dataServer: ApiServer,\r\n        private updateService: UpdateService\r\n    ) {}\r\n\r\n    getDatasetList(refresh?: boolean): Observable<any> {\r\n        if (refresh !== true && this.datasetList && this.datasetList.length) {\r\n            return Observable.of(this.datasetList).pipe(delay(100));\r\n        } else {\r\n            let subject = new Subject();\r\n\r\n            this.dataServer.get(this.apis.datasets, null, REQUEST_OPTIONS).subscribe((data: any) => {\r\n                this.datasetList = data;\r\n                subject.next(data);\r\n            });\r\n\r\n            return subject;\r\n        }\r\n    }\r\n\r\n    linkDataset(datasetId, chartConfig): Observable<any> {\r\n        if (_.isUndefined(datasetId) || _.isUndefined(chartConfig)) {\r\n            return Observable.of(false);\r\n        } else {\r\n            let subject = new Subject();\r\n\r\n            this.getDatasetList().subscribe((dsList) => {\r\n                let dataset = _.find(dsList, function (e) {\r\n                    return e.id === datasetId;\r\n                });\r\n\r\n                // link filter group\r\n                _.each(chartConfig.filters, function (f) {\r\n                    if (f.group) {\r\n                        var group = _.find(dataset.data.filters, function (e) {\r\n                            return e.id === f.id;\r\n                        });\r\n                        if (group) {\r\n                            f.filters = group.filters;\r\n                            f.group = group.group;\r\n                        }\r\n                    }\r\n                });\r\n                // link exp\r\n                _.each(chartConfig.values, function (v) {\r\n                    _.each(v.cols, function (c) {\r\n                        if (c.type === 'exp') {\r\n                            var exp = _.find(dataset.data.expressions, function (e) {\r\n                                return c.id === e.id;\r\n                            });\r\n                            if (exp) {\r\n                                c.exp = exp.exp;\r\n                                c.alias = exp.alias;\r\n                            }\r\n                            // replace variable in exp\r\n                            c.exp = replaceVariable(dataset.data.expressions, c);\r\n                        }\r\n                    });\r\n                });\r\n                function replaceVariable(expList, exp) {\r\n                    var value = exp.exp;\r\n                    var loopCnt = 0;\r\n                    var context = {};\r\n                    for (var i = 0; i < expList.length; i++) {\r\n                        context[expList[i].alias] = expList[i].exp;\r\n                    }\r\n                    value = value.render2(context, function (v) {\r\n                        return '(' + v + ')';\r\n                    });\r\n                    while (value.match(/\\$\\{.*?\\}/g) != null) {\r\n                        value = value.render2(context);\r\n                        if (loopCnt++ > 10) {\r\n                            throw 'Parser expresion [ ' + exp.exp + ' ] with error';\r\n                        }\r\n                    }\r\n                    return value;\r\n                }\r\n                // link dimension\r\n                let linkFunction = function (k) {\r\n                    if (k.id) {\r\n                        var _level;\r\n                        var _dimension;\r\n                        _.each(dataset.data.schema.dimension, function (e) {\r\n                            if (e.type === 'level') {\r\n                                _.each(e.columns, function (c) {\r\n                                    if (c.id === k.id) {\r\n                                        _dimension = c;\r\n                                        _level = e;\r\n                                    }\r\n                                });\r\n                            } else if (k.id === e.id) {\r\n                                _dimension = e;\r\n                            }\r\n                        });\r\n                        if (_dimension && _dimension.alias) {\r\n                            k.alias = _dimension.alias;\r\n                            if (_level) {\r\n                                k.level = _level.alias;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                _.each(chartConfig.keys, linkFunction);\r\n                _.each(chartConfig.groups, linkFunction);\r\n\r\n                subject.next(true);\r\n            });\r\n\r\n            return subject;\r\n        }\r\n    }\r\n\r\n    private getDimensionConfig(array) {\r\n        let result = [];\r\n\r\n        if (array) {\r\n            _.each(array, function (e) {\r\n                if (_.isUndefined(e.group)) {\r\n                    result.push(new FilterData(e.col, e.type, e.values, e.id));\r\n                } else {\r\n                    _.each(e.filters, function (f) {\r\n                        result.push(new FilterData(e.col, e.type, e.values));\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getDimensionValues(datasource, query, datasetId, colmunName, chartConfig, callback) {\r\n        let owner = this;\r\n\r\n        chartConfig = _.clone(chartConfig);\r\n\r\n        this.linkDataset(datasetId, chartConfig).subscribe(() => {\r\n            let cfg = undefined;\r\n\r\n            if (chartConfig) {\r\n                cfg = { rows: [], columns: [], filters: [] };\r\n                cfg.rows = owner.getDimensionConfig(chartConfig.keys);\r\n                cfg.columns = owner.getDimensionConfig(chartConfig.groups);\r\n                cfg.filters = owner.getDimensionConfig(chartConfig.filters);\r\n            }\r\n\r\n            this.dataServer.post('dimension-values', {\r\n                datasourceId: datasource,\r\n                query: JSON.stringify(query),\r\n                datasetId: datasetId,\r\n                colmunName: colmunName,\r\n                cfg: JSON.stringify(cfg),\r\n            }, REQUEST_OPTIONS).subscribe(callback);\r\n        });\r\n    }\r\n\r\n    getConfiguration(chartConfig) {\r\n        let cfg = {\r\n            rows: [],\r\n            columns: [],\r\n            filters: [],\r\n            values: []\r\n        };\r\n        let dataSeries = this.getDataSeriesViaConfig(chartConfig);\r\n\r\n        cfg.rows = this.getDimensionConfig(chartConfig.keys);\r\n        cfg.columns = this.getDimensionConfig(chartConfig.groups);\r\n        cfg.filters = this.getDimensionConfig(chartConfig.filters);\r\n        cfg.filters = cfg.filters.concat(this.getDimensionConfig(chartConfig.boardFilters));\r\n        cfg.filters = cfg.filters.concat(this.getDimensionConfig(chartConfig.boardWidgetFilters));\r\n        cfg.values = _.map(dataSeries, function (s) {\r\n            return { column: s.name, aggType: s.aggregate };\r\n        });\r\n\r\n        return cfg;\r\n    }\r\n\r\n    getDataSeries(datasource, query, datasetId, chartConfig, callback, reload) {\r\n        let queryData: any = {\r\n            datasourceId: datasource,\r\n            datasetId: datasetId,\r\n            reportId: this.route.snapshot.queryParams.id,\r\n            query: JSON.stringify(query),\r\n            cfg: JSON.stringify(this.getConfiguration(chartConfig)),\r\n            reload: reload\r\n        };\r\n        let range = this.route.snapshot.queryParams.range;\r\n\r\n        if (range) {\r\n            range = range.split('_');\r\n            queryData.beginTime = range[0];\r\n            queryData.endTime = range[1];\r\n        }\r\n        chartConfig = _.clone(chartConfig);\r\n        this.updateService.updateConfig(chartConfig);\r\n        this.linkDataset(datasetId, chartConfig).subscribe(() => {\r\n            this.dataServer.post(this.apis.aggregate, queryData, REQUEST_OPTIONS).subscribe((data: any) => {\r\n                let result: any = this.castRawData2Series(data, chartConfig);\r\n\r\n                result.chartConfig = chartConfig;\r\n                if (!_.isUndefined(datasetId)) {\r\n                    this.getDrillConfig(datasetId, chartConfig).subscribe(function (c) {\r\n                        result.drill = { config: c };\r\n                        callback(result);\r\n                    });\r\n                } else {\r\n                    callback(result);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getDrillPath(datasetId, id): Observable<any> {\r\n        let subject = new Subject();\r\n\r\n        this.getDatasetList().subscribe((dsList: any) => {\r\n            let dataset = _.find(dsList, function (e) {\r\n                return e.id === datasetId;\r\n            });\r\n            let path = [];\r\n            let level;\r\n\r\n            _.each(dataset.data.schema.dimension, function (_e) {\r\n                if (_e.type === 'level') {\r\n                    _.each(_e.columns, function (_c) {\r\n                        if (_c.id === id) {\r\n                            path = _e.columns;\r\n                            level = _e;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            path = _.map(path, function (e) {\r\n                return {\r\n                    id: e.id,\r\n                    alias: e.alias,\r\n                    col: e.column,\r\n                    level: level.alias,\r\n                    type: '=',\r\n                    values: [],\r\n                    sort: 'asc'\r\n                }\r\n            });\r\n            subject.next(path);\r\n        });\r\n\r\n        return subject;\r\n    };\r\n\r\n    getDrillConfig(datasetId, chartConfig): Observable<any> {\r\n        let subject = new Subject();\r\n\r\n        this.getDatasetList().subscribe((dsList: any) => {\r\n            let drillConfig = {};\r\n            let dataset = _.find(dsList, function (e) {\r\n                return e.id === datasetId;\r\n            });\r\n\r\n            if (!dataset.data.schema || dataset.data.schema.dimension.length === 0) {\r\n                subject.next(drillConfig);\r\n                return;\r\n            }\r\n            let _f = function(array) {\r\n                _.each(array, function (c, i_array) {\r\n                    let level;\r\n                    let i_level;\r\n                    let prevIsInLevel = false;\r\n\r\n                    _.find(dataset.data.schema.dimension, function (_e) {\r\n                        if (_e.type === 'level') {\r\n                            return _.find(_e.columns, function (_c, _i) {\r\n                                if (_c.id === c.id) {\r\n                                    level = _e;\r\n                                    i_level = _i;\r\n                                    return true;\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    if (!level) {\r\n                        return;\r\n                    }\r\n                    if (+i_array > 0 && i_level > 0) {\r\n                        prevIsInLevel = array[+i_array - 1].id === level.columns[i_level - 1].id;\r\n                    }\r\n                    let prevDrilled = +i_array > 0 && array[+i_array - 1].values.length === 1 && array[+i_array - 1].type === '=';\r\n                    let nextIsInLevel = false;\r\n\r\n                    if (+i_array < array.length - 1 && i_level < level.columns.length - 1) {\r\n                        nextIsInLevel = array[i_array + 1].id === level.columns[i_level + 1].id;\r\n                    }\r\n                    let isLastLevel = i_level === level.columns.length - 1;\r\n                    let drillDownExistIdx: any = 0;\r\n                    let drillDownExist = _.find(array, function (e, i) {\r\n                        if (i_level < level.columns.length - 1 && level.columns[i_level + 1].id === e.id) {\r\n                            drillDownExistIdx = i;\r\n                            return true;\r\n                        }\r\n                    });\r\n                    // if next level exist in array,the level must be the next of current\r\n                    let drillDown = drillDownExist ? drillDownExistIdx === i_array + 1 : true;\r\n                    let up = i_level > 0 && +i_array > 0 && prevIsInLevel && (+i_array === array.length - 1 || !nextIsInLevel) && prevDrilled;\r\n                    let down = (nextIsInLevel || !isLastLevel) && drillDown && (!prevIsInLevel || (array[+i_array - 1].type === '=' && array[+i_array - 1].values.length === 1));\r\n\r\n                    drillConfig[c.id] = {\r\n                        up: up,\r\n                        down: down\r\n                    };\r\n                });\r\n            };\r\n            _f(chartConfig.keys);\r\n            _f(chartConfig.groups);\r\n            subject.next(drillConfig);\r\n        });\r\n\r\n        return subject;\r\n    }\r\n\r\n    viewQuery(params, callback) {\r\n        let owner = this;\r\n\r\n        params.config = {...params.config};\r\n        this.updateService.updateConfig(params.config);\r\n        this.linkDataset(params.datasetId, params.config).subscribe(() => {\r\n            let dataSeries = owner.getDataSeriesViaConfig(params.config);\r\n            let cfg = {\r\n                rows: [],\r\n                columns: [],\r\n                filters: [],\r\n                values: []\r\n            };\r\n\r\n            cfg.rows = owner.getDimensionConfig(params.config.keys);\r\n            cfg.columns = owner.getDimensionConfig(params.config.groups);\r\n            cfg.filters = owner.getDimensionConfig(params.config.filters);\r\n            cfg.filters = cfg.filters.concat(owner.getDimensionConfig(params.config.boardFilters));\r\n            cfg.values = _.map(dataSeries, function (s) {\r\n                return {\r\n                    column: s.name,\r\n                    aggType: s.aggregate\r\n                };\r\n            });\r\n            this.dataServer.post('aggregate-query', {\r\n                datasourceId: params.datasource,\r\n                query: JSON.stringify(params.query),\r\n                datasetId: params.datasetId,\r\n                cfg: JSON.stringify(cfg),\r\n            }, REQUEST_OPTIONS).subscribe((data: any) => {\r\n                callback(data[0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    getColumns(option) {\r\n        this.dataServer.post('columns', {\r\n            datasourceId: option.datasource,\r\n            query: option.query ? JSON.stringify(option.query) : null,\r\n            datasetId: option.datasetId,\r\n            reload: option.reload\r\n        }, REQUEST_OPTIONS).subscribe((data: any) => {\r\n            option.callback(data);\r\n        });\r\n    }\r\n\r\n    private getDataSeriesViaConfig(chartConfig) {\r\n        let owner = this;\r\n        let result = [];\r\n\r\n        _.each(chartConfig.values, function (v) {\r\n            _.each(v.cols, function (c) {\r\n                let series = owner.configToDataSeries(c);\r\n\r\n                _.each(series, function (s) {\r\n                    if (!_.find(result, function (e) {\r\n                        return JSON.stringify(e) === JSON.stringify(s);\r\n                    })) {\r\n                        result.push(s);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private configToDataSeries(config) {\r\n        switch (config.type) {\r\n            case 'exp':\r\n                return this.getExpSeries(config.exp);\r\n            default:\r\n                return [{\r\n                    name: config.col,\r\n                    aggregate: config.aggregate_type\r\n                }];\r\n        }\r\n    }\r\n\r\n    private getExpSeries(exp) {\r\n        return this.parserExp(exp).aggs;\r\n    }\r\n\r\n    private filter(cfg, iv) {\r\n        if(!cfg.f_values || !cfg.f_type) {\r\n            return true;\r\n        }\r\n        let v = cfg.f_values[0];\r\n        let a = v;\r\n        let b = cfg.f_values[1];\r\n        let params = this.toNumber(iv, v);\r\n\r\n        switch (cfg.f_type) {\r\n            case '=':\r\n            case 'eq':\r\n                for (let i = 0; i < cfg.f_values.length; i++) {\r\n                    if (iv === cfg.f_values[i]) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return cfg.f_values.length === 0;\r\n            case '≠':\r\n            case 'ne':\r\n                for (let i = 0; i < cfg.f_values.length; i++) {\r\n                    if (iv === cfg.f_values[i]) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            case '>':\r\n                if (!_.isUndefined(v) && params[0] <= params[1]) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '<':\r\n                if (!_.isUndefined(v) && params[0] >= params[1]) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '≥':\r\n                if (!_.isUndefined(v) && params[0] < params[1]) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '≤':\r\n                if (!_.isUndefined(v) && params[0] > params[1]) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '(a,b]':\r\n                params = this.toNumber(iv, a, b);\r\n                if (!_.isUndefined(a) && !_.isUndefined(b) && (params[0] <= params[1] || params[0] > params[2])) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '[a,b)':\r\n                params = this.toNumber(iv, a, b);\r\n                if (!_.isUndefined(a) && !_.isUndefined(b) && (params[0] < params[1] || params[0] >= params[2])) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '(a,b)':\r\n                params = this.toNumber(iv, a, b);\r\n                if (!_.isUndefined(a) && !_.isUndefined(b) && (params[0] <= params[1] || params[0] >= params[2])) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            case '[a,b]':\r\n                params = this.toNumber(iv, a, b);\r\n                if (!_.isUndefined(a) && !_.isUndefined(b) && (params[0] < params[1] || params[0] > params[2])) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    toNumber(...args: Array<any>) {\r\n        let arr = _.isArray(args[0]) ? args[0] : args;\r\n        let result = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let a = Number(arr[i]);\r\n\r\n            if (isNaN(a)) {\r\n                return arr;\r\n            } else {\r\n                result.push(a);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Cast the aggregated raw data into data series\r\n     * @param rawData\r\n     * @param chartConfig\r\n     */\r\n    castRawData2Series(aggData, chartConfig) {\r\n        let owner = this;\r\n        let castedKeys = new Array();\r\n        let castedGroups = new Array();\r\n        let joinedKeys = {};\r\n        let joinedGroups = {};\r\n        let newData = {};\r\n        let getIndex = function (columnList, col) {\r\n            let result = new Array();\r\n\r\n            if (col) {\r\n                for (let j = 0; j < col.length; j++) {\r\n                    let idx = _.find(columnList, function (e) {\r\n                        return e.name === col[j];\r\n                    });\r\n                    result.push(idx.index);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        let keysIdx = getIndex(aggData.columnList, _.map(chartConfig.keys, function (e) {\r\n            return e.col;\r\n        }));\r\n        let keysSort = _.map(chartConfig.keys, function (e) {\r\n            return e.sort;\r\n        });\r\n        let groupsIdx = getIndex(aggData.columnList, _.map(chartConfig.groups, function (e) {\r\n            return e.col;\r\n        }));\r\n        let groupsSort = _.map(chartConfig.groups, function (e) {\r\n            return e.sort;\r\n        });\r\n        let valueSeries = _.filter(aggData.columnList, function (e) {\r\n            return e.aggType;\r\n        });\r\n        for (let i = 0; i < aggData.data.length; i++) {\r\n            // 组合keys\r\n            let newKey = owner.getRowElements(aggData.data[i], keysIdx);\r\n            let jk = newKey.join('-');\r\n\r\n            if (_.isUndefined(joinedKeys[jk])) {\r\n                castedKeys.push(newKey);\r\n                joinedKeys[jk] = true;\r\n            }\r\n            // 组合groups\r\n            let group = owner.getRowElements(aggData.data[i], groupsIdx);\r\n            let newGroup = group.join('-');\r\n\r\n            if (_.isUndefined(joinedGroups[newGroup])) {\r\n                castedGroups.push(group);\r\n                joinedGroups[newGroup] = true;\r\n            }\r\n            // pick the raw values into coordinate cell and then use aggregate function to do calculate\r\n            _.each(valueSeries, function (dSeries: any) {\r\n                if (_.isUndefined(newData[newGroup])) {\r\n                    newData[newGroup] = {};\r\n                }\r\n                if (_.isUndefined(newData[newGroup][dSeries.name])) {\r\n                    newData[newGroup][dSeries.name] = {};\r\n                }\r\n                if (_.isUndefined(newData[newGroup][dSeries.name][dSeries.aggType])) {\r\n                    newData[newGroup][dSeries.name][dSeries.aggType] = {};\r\n                }\r\n                // if (_.isUndefined(newData[newGroup][dSeries.name][dSeries.aggType][jk])) {\r\n                //     newData[newGroup][dSeries.name][dSeries.aggType][jk] = [];\r\n                // }\r\n                newData[newGroup][dSeries.name][dSeries.aggType][jk] = parseFloat(aggData.data[i][dSeries.index]);\r\n            });\r\n        }\r\n        // sort dimension\r\n        let getSort = function (sort) {\r\n            return function (a, b) {\r\n                let r = 0;\r\n                let j = 0;\r\n\r\n                for (; j < a.length; j++) {\r\n                    if (!sort[j]) {\r\n                        continue;\r\n                    }\r\n                    if (a[j] === b[j]) {\r\n                        r = 0;\r\n                        continue;\r\n                    }\r\n                    let params = owner.toNumber(a[j], b[j]);\r\n\r\n                    r = (params[0] > params[1]) ? 1 : -1;\r\n                    if (sort[j] === 'desc') {\r\n                        r = r * -1;\r\n                    }\r\n                    break;\r\n                }\r\n                return r;\r\n            }\r\n        };\r\n        castedKeys.sort(getSort(keysSort));\r\n        castedGroups.sort(getSort(groupsSort));\r\n        //\r\n        let castedAliasSeriesName = new Array();\r\n        let aliasSeriesConfig = {};\r\n        let aliasData = new Array();\r\n        let valueSort = undefined;\r\n        let valueSortArr = [];\r\n\r\n        _.each(castedGroups, function (group) {\r\n            _.each(chartConfig.values, function (value) {\r\n                if (value && value.cols) {\r\n                    _.each(value.cols, function (series) {\r\n                        if (_.isUndefined(valueSort) && series.sort) {\r\n                            valueSort = series.sort;\r\n                            owner.castSeriesData(series, group.join('-'), castedKeys, newData, function (castedData, keyIdx) {\r\n                                valueSortArr[keyIdx] = { v: castedData, i: keyIdx };\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        if (!_.isUndefined(valueSort)) {\r\n            valueSortArr.sort(function (a, b) {\r\n                if (a.v === b.v) {\r\n                    return 0;\r\n                }\r\n                let p = owner.toNumber(a.v, b.v)\r\n                if ((p[0] < p[1]) ^ valueSort === 'asc') {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n            let tk = [...castedKeys];\r\n\r\n            _.each(valueSortArr, function (e, i) {\r\n                castedKeys[i] = tk[e.i];\r\n            });\r\n        }\r\n\r\n        _.each(castedGroups, function (group) {\r\n            _.each(chartConfig.values, function (value, vIdx) {\r\n                _.each(value.cols, function (series) {\r\n                    let seriesName = series.alias ? series.alias : series.col;\r\n                    let newSeriesName = seriesName;\r\n\r\n                    if (group && group.length > 0) {\r\n                        let a = [].concat(group);\r\n\r\n                        a.push(seriesName);\r\n                        newSeriesName = a.join('-');\r\n                        castedAliasSeriesName.push(a);\r\n                    } else {\r\n                        castedAliasSeriesName.push([seriesName]);\r\n                    }\r\n                    // castedAliasSeriesName.push(newSeriesName);\r\n                    aliasSeriesConfig[newSeriesName] = {\r\n                        type: value.series_type,\r\n                        valueAxisIndex: vIdx,\r\n                        formatter: series.formatter\r\n                    };\r\n                    owner.castSeriesData(series, group.join('-'), castedKeys, newData, function (castedData, keyIdx) {\r\n                        if (!aliasData[castedAliasSeriesName.length - 1]) {\r\n                            aliasData[castedAliasSeriesName.length - 1] = new Array();\r\n                        }\r\n                        // Only format decimal\r\n                        aliasData[castedAliasSeriesName.length - 1][keyIdx] = castedData;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        for (let i = 0; i < castedKeys.length; i++) {\r\n            let s = 0;\r\n            let f = true;\r\n\r\n            _.each(castedGroups, function (group) {\r\n                _.each(chartConfig.values, function (value) {\r\n                    if (value && value.cols) {\r\n                        _.each(value.cols, function (series) {\r\n                            if (!f) {\r\n                                return;\r\n                            }\r\n                            if (series && series.f_top && series.f_top <= i) {\r\n                                f = false;\r\n                            }\r\n                            if (!owner.filter(series, aliasData[s][i])) {\r\n                                f = false;\r\n                            }\r\n                            if (f) {\r\n                                if (!aliasData[s][i]) {\r\n                                    aliasData[s][i] = 0\r\n                                }\r\n                                aliasData[s][i] = CommonUtil.dataFormat(aliasData[s][i]);\r\n                            }\r\n                            s++;\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            if (!f) {\r\n                castedKeys.splice(i, 1);\r\n                _.each(aliasData, function (_series) {\r\n                    _series.splice(i, 1);\r\n                });\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return {\r\n            keys: castedKeys,\r\n            series: castedAliasSeriesName,\r\n            data: aliasData,\r\n            seriesConfig: aliasSeriesConfig\r\n        };\r\n    }\r\n\r\n    getDateString(date: any): string {\r\n        return date.year + '' + (date.month < 10 ? '0' : '') + date.month + (date.day < 10 ? '0' : '') + date.day;\r\n    }\r\n\r\n    getConfigs(board: any) {\r\n        let configs = [];\r\n\r\n        if (board && board.layout) {\r\n            board.layout.rows.forEach((row) => {\r\n                if (!row.widgets) {\r\n                    return;\r\n                }\r\n                row.widgets.forEach((widget) => {\r\n                    try {\r\n                        configs.push(this.getConfiguration(widget.widget.data.config));\r\n                    } catch (e) {\r\n                        console.error('ERROR ---------- DataService getConfigs');\r\n                        console.error(e);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        return configs;\r\n    }\r\n\r\n\r\n    parserExp(rawExp) {\r\n        let evalExp = rawExp;\r\n        let _temp = [];\r\n        let aggs = [];\r\n        let names = []; // expression text in aggreagtion function, could be a columnName or script\r\n\r\n        evalExp = evalExp.trim().replace(/[\\n|\\r|\\r\\n]/g, '');\r\n        _.each(evalExp.match(/'.*?'/g), function (qutaText) {\r\n            evalExp = evalExp.replace(qutaText, '_#' + _temp.length);\r\n            _temp.push(qutaText);\r\n        });\r\n        _.each(evalExp.match(/(sum|avg|count|max|min|distinct)\\('?.*?'?\\)/g), function (aggUnit) {\r\n            let aggregate = aggUnit.substring(0, aggUnit.indexOf('('));\r\n            let name = aggUnit.substring(aggUnit.indexOf('(') + 1, aggUnit.indexOf(')'));\r\n\r\n            if (name.match('_#')) {\r\n                name = _temp[name.replace('_#', '')].replace(/\\'/g, '');\r\n            }\r\n            evalExp = evalExp.replace(aggUnit, 'groupData[_names[' + names.length + ']][\"' + aggregate + '\"][key]');\r\n            names.push(name);\r\n            aggs.push({\r\n                name: name,\r\n                aggregate: aggregate\r\n            });\r\n        });\r\n\r\n        return {\r\n            evalExp: evalExp,\r\n            aggs: aggs,\r\n            names: names\r\n        };\r\n    }\r\n\r\n    private castSeriesData(series, group, castedKeys, newData, iterator) {\r\n        switch (series.type) {\r\n            case 'exp':\r\n                let runExp = this.compileExp(series.exp);\r\n\r\n                for (let i = 0; i < castedKeys.length; i++) {\r\n                    iterator(runExp(newData[group], castedKeys[i].join('-')), i);\r\n                }\r\n                break;\r\n            default:\r\n                for (let i = 0; i < castedKeys.length; i++) {\r\n                    iterator(newData[group][series.col][series.aggregate_type][castedKeys[i].join('-')], i)\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private compileExp = function (exp) {\r\n        let parseredExp = this.parserExp(exp);\r\n\r\n        return function (groupData, key) {\r\n            let _names = parseredExp.names;\r\n\r\n            return eval(parseredExp.evalExp);\r\n        };\r\n    }\r\n\r\n    private aggregate(data: Array<any>, fnc) {\r\n        if (!data) {\r\n            return data;\r\n        }\r\n        switch (fnc) {\r\n            case 'sum':\r\n                return this.aggregate_sum(data);\r\n            case 'count':\r\n                return this.aggregate_count(data);\r\n            case 'avg':\r\n                return this.aggregate_avg(data);\r\n            case 'max':\r\n                return parseFloat(_.max(data));\r\n            case 'min':\r\n                return parseFloat(_.min(data));\r\n        }\r\n    }\r\n\r\n    private aggregate_sum(data: Array<any>): number {\r\n        let sum = 0;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            let f = parseFloat(data[i]);\r\n\r\n            if (f) {\r\n                sum += f;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    private aggregate_count(data: Array<any>): number {\r\n        return data.length;\r\n    }\r\n\r\n    private aggregate_avg(data: Array<any>): number {\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            let f = parseFloat(data[i]);\r\n\r\n            if (f) {\r\n                sum += f;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return count === 0 ? 0 : sum / count;\r\n    }\r\n\r\n    private getHeaderIndex(chartData, col): Array<any> {\r\n        let result = new Array();\r\n\r\n        if (col) {\r\n            for (let j = 0; j < col.length; j++) {\r\n                let idx = _.indexOf(chartData[0], col[j]);\r\n                result.push(idx);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private getRowElements(row, elmIdxs) {\r\n        let arr = new Array();\r\n\r\n        for (let j = 0; j < elmIdxs.length; j++) {\r\n            let elm = row[elmIdxs[j]];\r\n\r\n            arr.push(elm);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n}\r\n"]}