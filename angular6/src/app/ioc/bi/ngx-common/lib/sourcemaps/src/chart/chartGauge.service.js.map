{"version":3,"sources":["src/chart/chartGauge.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartGauge.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Render } from './render';\r\nvar numbro = require('numbro');\r\n\r\n@Injectable()\r\n\r\nexport class ChartGaugeService {\r\n    constructor() {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist) {\r\n        if (option == null) {\r\n            containerDom.html(\"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">No Data!</div>\");\r\n            return null;\r\n        }\r\n        let height;\r\n\r\n        scope ? height = scope.myheight - 20 : null;\r\n\r\n        return new Render(containerDom, option).chart(height, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var option = {\r\n            tooltip: {\r\n                formatter: \"{a} <br/>{b} : {c}\"\r\n            },\r\n            toolbox: {\r\n                show : true,\r\n                feature : {\r\n                    mark : {show: false},\r\n                    dataView : {show: true, readOnly: true},\r\n                    //magicType : {show: true, type: ['line', 'bar']},\r\n                    restore : {show: false},\r\n                    saveAsImage : {show: true}\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'gauge',\r\n                    min: 0,                // 最小值\r\n                    max: 100,              // 最大值\r\n                    splitNumber: 10,       // 分割段数，默认为5\r\n                    axisLine: {            // 坐标轴线\r\n                        lineStyle: {       // 属性lineStyle控制线条样式\r\n                            color: [\r\n                                [0.2, '#228b22'],\r\n                                [0.8, '#48b'],\r\n                                [1, '#ff4500']\r\n                            ],\r\n                            width: 8\r\n                        }\r\n                    },\r\n                    axisTick: {            // 坐标轴小标记\r\n                        splitNumber: 10,   // 每份split细分多少段\r\n                        length: 12,        // 属性length控制线长\r\n                        lineStyle: {       // 属性lineStyle控制线条样式\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    splitLine: {           // 分隔线\r\n                        show: true,        // 默认显示，属性show控制显示与否\r\n                        length: 20,         // 属性length控制线长\r\n                        lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    pointer: {\r\n                        width: 5\r\n                    },\r\n                    title: {\r\n                        show: true,\r\n                        offsetCenter: [0, '-40%'],       // x, y，单位px\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            fontWeight: 'bolder'\r\n                        }\r\n                    },\r\n                    detail: {\r\n                        formatter: '{value}',\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            color: 'auto',\r\n                            fontWeight: 'bolder',\r\n                            fontSize: 20\r\n                        }\r\n                    },\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        var config = data.chartConfig;\r\n        var aggregate_data = data.data;\r\n\r\n        var name = config.values[0].name ? config.values[0].name : \"\";\r\n\r\n        var minValue = config.values[0].minValue ? config.values[0].minValue : 0;\r\n        var maxValue = config.values[0].maxValue ? config.values[0].maxValue : 100;\r\n        if (isNaN(minValue) || isNaN(maxValue) || parseFloat(minValue) >= parseFloat(maxValue)) {\r\n            minValue = 0;\r\n            maxValue = 100;\r\n        }\r\n        option.series[0].min = minValue;\r\n        option.series[0].max = maxValue;\r\n\r\n        var colors = [];\r\n        for (var i in config.styles) {\r\n            var proportion = config.styles[i].proportion;\r\n            var color = config.styles[i].color;\r\n            if (proportion != undefined && proportion != \"\")\r\n                colors.push([proportion, color]);\r\n        }\r\n        if (colors.length > 0) {\r\n            option.series[0].axisLine.lineStyle.color = colors;\r\n        }\r\n\r\n        var value = (aggregate_data.length > 0 && aggregate_data[0].length > 0) ? aggregate_data[0][0] : 'N/A';\r\n        if (config.values[0].format) {\r\n            value = numbro(value).format(config.values[0].format);\r\n        }\r\n\r\n        var index = value.lastIndexOf(\"%\");\r\n        if (index != -1) {\r\n            value = value.substring(0, index);\r\n            option.tooltip.formatter = \"{a} <br/>{b} : {c}%\";\r\n            option.series[0].detail.formatter = \"{value}%\";\r\n        }\r\n\r\n        option.series[0].data = [{name: name, value: value}];\r\n\r\n        return option;\r\n    };\r\n}"]}