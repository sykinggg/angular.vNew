{"version":3,"sources":["src/chart/chartFunnel.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartFunnel.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UpdateEchartOptionsService } from './common/updateechartOptions.service';\r\nimport { Render } from './render';\r\n\r\nimport * as _ from 'lodash';\r\nvar eCharts = require('echarts');\r\n\r\n@Injectable()\r\n\r\nexport class ChartFunnelService {\r\n\r\n    constructor(\r\n        private activeRoute: ActivatedRoute,\r\n        private updateEchartOptions: UpdateEchartOptionsService\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        var render = new Render(containerDom, option, null, eCharts);\r\n        render.addClick(chartConfig, relations, this.activeRoute);\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var chartConfig = data.chartConfig;\r\n        var casted_keys = data.keys;\r\n        var casted_values = data.series;\r\n        var aggregate_data = data.data;\r\n        var newValuesConfig = data.seriesConfig;\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            return key.join('-');\r\n        });\r\n        var string_values = _.map(casted_values, function (value) {\r\n            return value.join('-');\r\n        });\r\n\r\n        var series = [];\r\n        var b = 100 / (string_keys.length * 9 + 1);\r\n        var titles = [];\r\n        for (var i = 0; i < string_keys.length; i++) {\r\n            var s = {\r\n                name: string_keys[i],\r\n                type: 'funnel',\r\n                left: b + i * b * 9 + '%',\r\n                width: b * 8 + '%',\r\n                maxSize: '100%',\r\n                minSize: '10%',\r\n                label: {\r\n                    normal: {\r\n                        formatter: function (params) {\r\n                            return params.value + \"\\n\" + params.data.percent + \"%\";\r\n                        },\r\n                        show: true,\r\n                        position: 'inside'\r\n                    }\r\n                },\r\n                data: []\r\n            };\r\n            titles.push({\r\n                textAlign: 'center', textStyle: {\r\n                    fontSize: 12,\r\n                    fontWeight: 'normal'\r\n                }, text: string_keys[i], left: 5 * b + i * 9 * b + '%', top: '90%'\r\n            });\r\n            var m = parseFloat(_.max(aggregate_data));\r\n            for (var d = 0; d < string_values.length; d++) {\r\n                s.data.push({\r\n                    name: string_values[d],\r\n                    value: aggregate_data[d][i],\r\n                    percent: (aggregate_data[d][i] / m * 100).toFixed(2)\r\n                });\r\n            }\r\n            series.push(s);\r\n        }\r\n\r\n        var echartOption = {\r\n            title: titles,\r\n            legend: {\r\n                data: string_values\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: function (params) {\r\n                    return params.seriesName + \" <br/>\" + params.name + \" : \" + params.value + \"<br>\" + params.data.percent + \"%\";\r\n                }\r\n            },\r\n            toolbox: false,\r\n            series: series\r\n        };\r\n\r\n        this.updateEchartOptions.updateEchartOptions(chartConfig.option, echartOption);\r\n\r\n        return echartOption;\r\n    };\r\n}"]}