{"version":3,"sources":["src/chart/chartTreeMap.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartTreeMap.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Render } from './render';\r\n\r\n@Injectable()\r\n\r\nexport class ChartTreeMapService {\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        if (option == null) {\r\n            containerDom.html(\"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">No Data!</div>\");\r\n            return null;\r\n        }\r\n        let height = scope ? scope.myheight - 20 : null;\r\n        let render = new Render(containerDom, option);\r\n\r\n        render.addClick(chartConfig, relations, this.activatedRoute);\r\n\r\n        return render.chart(height, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n\r\n        var option: any = {\r\n            tooltip: {\r\n                formatter: '{b} : {c}'\r\n            },\r\n            series: [{\r\n                type: 'treemap',\r\n                visibleMin: 1,\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        position: 'insideTopLeft',\r\n                        formatter: function (a) {\r\n                            return a.name + \"\\n\\nvalue : \" + a.value;\r\n                        },\r\n                        textStyle: {\r\n                            fontSize: '14',\r\n                            fontWeight: 'bold'\r\n                        }\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n\r\n        var config = data.chartConfig;\r\n\r\n        var name = config.values[0].name ? config.values[0].name : \"Main\";\r\n        option.series[0].name = name;\r\n\r\n        var leafDepth = config.values[0].leafDepth ? config.values[0].leafDepth : 1;\r\n        option.series[0].leafDepth = leafDepth;\r\n\r\n        var style = config.values[0].style ? config.values[0].style : \"random\";\r\n        if (style != \"random\" && style != \"multi\") option.color = [style];\r\n\r\n        var depth = data.chartConfig.keys.length;\r\n        var keys = data.keys;\r\n        var values = data.data;\r\n        for (var i in keys) keys[i].reverse();\r\n        var datas = this.recursion(depth, depth, \"\", keys, values, style);\r\n        if (style != \"random\" && style != \"multi\") {\r\n            option.series[0].data = [\r\n                {\r\n                    value: 1000,\r\n                    children: datas\r\n                }\r\n            ];\r\n        } else {\r\n            option.series[0].data = datas;\r\n        }\r\n\r\n        var levels = [];\r\n        for (let i = depth; i > 0; i--) {\r\n            levels.push({\r\n                colorSaturation: [0.2, 0.6],\r\n                itemStyle: {\r\n                    normal: {\r\n                        borderColorSaturation: 0.7,\r\n                        gapWidth: i\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        option.series[0].levels = levels;\r\n\r\n        return option;\r\n    };\r\n\r\n    /**\r\n     * 递归\r\n     */\r\n    public recursion(depth, totalDepth, prefix, keys, values, style?) {\r\n        let self = this;\r\n        var map = this.getMap(depth, totalDepth, prefix, keys, values);\r\n        var data = [];\r\n        if (depth == totalDepth) {\r\n            for (var k in map) {\r\n                var obj: any = {\r\n                    name: map[k].arr[depth - 1],\r\n                    value: map[k].val,\r\n                    children: self.recursion(depth - 1, totalDepth, map[k].key, keys, values)\r\n                };\r\n                if (style == \"random\") obj.itemStyle = self.createRandomItemStyle();\r\n                data.push(obj);\r\n            }\r\n        } else if (depth > 1) {\r\n            for (var k in map) {\r\n                data.push({\r\n                    name: map[k].arr[depth - 1],\r\n                    value: map[k].val,\r\n                    children: self.recursion(depth - 1, totalDepth, map[k].key, keys, values)\r\n                });\r\n            }\r\n        } else if (depth == 1) {\r\n            for (var k in map) {\r\n                data.push({\r\n                    name: map[k].arr[depth - 1],\r\n                    value: map[k].val\r\n                });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public getMap(depth, totalDepth, prefix, keys, values) {\r\n        var map = {};\r\n        for (var i in keys) {\r\n            var key = keys[i][depth - 1];\r\n            if (totalDepth > depth) {\r\n                var prefixs = \"\";\r\n                for (var j = totalDepth; j > depth; j--) {\r\n                    if (j == totalDepth)\r\n                        prefixs = keys[i][j - 1];\r\n                    else\r\n                        prefixs = prefixs + \"-\" + keys[i][j - 1];\r\n                }\r\n                if (prefix != prefixs) continue;\r\n                key = prefix + \"-\" + key;\r\n            }\r\n            var val = isNaN(values[0][i]) ? 0 : parseFloat(values[0][i]);\r\n            if (map[key] == undefined) {\r\n                map[key] = {key: key, val: val, arr: keys[i]};\r\n            } else {\r\n                map[key] = {key: key, val: map[key].val + val, arr: keys[i]};\r\n            }\r\n        }\r\n        return map;\r\n    }\r\n\r\n\r\n    public createRandomItemStyle() {\r\n        return {\r\n            normal: {\r\n                color: 'rgb(' + [\r\n                    Math.round(Math.random() * 160),\r\n                    Math.round(Math.random() * 160),\r\n                    Math.round(Math.random() * 160)\r\n                ].join(',') + ')'\r\n            }\r\n        };\r\n    }\r\n}"]}