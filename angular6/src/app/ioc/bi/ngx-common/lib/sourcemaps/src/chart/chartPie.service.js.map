{"version":3,"sources":["src/chart/chartPie.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartPie.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { Router } from '@angular/router';\r\nimport { Render } from './render';\r\n\r\nimport { UpdateEchartOptionsService } from './common/updateechartOptions.service';\r\n// import { CBoardEChartRender } from './render/eChartRender';\r\n// import { updateEchartOptions } from './common/updateechartOptions';\r\n\r\n@Injectable()\r\n\r\nexport class ChartPieService {\r\n    constructor(\r\n        private router: Router,\r\n        private updateEchartOptions: UpdateEchartOptionsService\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        let render: any = new Render(containerDom, option, false);\r\n\r\n        render.addClick(chartConfig, relations, this.router);\r\n\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var chartConfig = data.chartConfig;\r\n        var casted_keys = data.keys;\r\n        var casted_values = data.series;\r\n        var aggregate_data = data.data;\r\n        var newValuesConfig = data.seriesConfig;\r\n\r\n        var series = new Array();\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            return key.join('-');\r\n        });\r\n        var string_value = _.map(casted_values, function (value) {\r\n            return value.join('-');\r\n        });\r\n        var b = 100 / (casted_values.length * 9 + 1);\r\n        var titles = [];\r\n        for (var i = 0; i < aggregate_data.length; i++) {\r\n            var joined_values = casted_values[i].join('-');\r\n            var realType = _.clone(newValuesConfig[joined_values]).type;\r\n            var s: any = {\r\n                name: string_value[i],\r\n                type: 'pie',\r\n                realType: realType,\r\n                center: [5 * b + i * 9 * b + '%', '50%'],\r\n                data: [],\r\n                //roseType: 'angle'\r\n                itemStyle: {\r\n                    normal: {\r\n                        label: {\r\n                            show: true,\r\n                            //position:'inside',\r\n                            formatter: '{b}: {d}%'\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    },\r\n                    labelLine: {show: true}\r\n                }\r\n            };\r\n            if (realType == 'coxcomb') {\r\n                s.roseType = 'angle';\r\n            }\r\n            titles.push({\r\n                textAlign: 'center', textStyle: {\r\n                    fontSize: 12,\r\n                    fontWeight: 'normal'\r\n                }, text: string_value[i], left: 5 * b + i * 9 * b + '%', top: '90%'\r\n            });\r\n            for (var j = 0; j < aggregate_data[i].length; j++) {\r\n                s.data.push({\r\n                    name: string_keys[j],\r\n                    value: _.isUndefined(aggregate_data[i][j]) ? 0 : aggregate_data[i][j]\r\n                });\r\n            }\r\n            series.push(s);\r\n        }\r\n        var echartOption = {\r\n            title: titles,\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: string_keys\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            toolbox: false,\r\n            series: series\r\n        };\r\n\r\n        this.updateEchartOptions.updateEchartOptions(chartConfig.option, echartOption);\r\n\r\n        return echartOption;\r\n    };\r\n}"]}