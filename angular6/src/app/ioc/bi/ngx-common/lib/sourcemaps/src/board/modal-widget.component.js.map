{"version":3,"sources":["src/board/modal-widget.component.ts"],"names":[],"mappings":";;;AAAA,sCAA0F;AAG1F,wDAAsD;AACtD,iDAA+C;AAM/C;IAKI,8BACY,UAAsB,EACtB,YAA0B,EAC1B,YAA0B;QAF1B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QALtC,YAAO,GAAG,KAAK,CAAC;IAMb,CAAC;IAEJ,8CAAe,GAAf,UAAgB,MAAoB,EAAE,YAAiB;QAAvD,iBA8BC;QA7BG,IAAI,YAAY,GAAG,UAAS,MAAW;YACnC,MAAM,CAAC,OAAO,GAAG;gBACb,OAAO,EAAE;oBACL,QAAQ,EAAE;wBACN,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,IAAI;qBACjB;oBACD,SAAS,EAAE;wBACP,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC;qBAC1C;oBACD,QAAQ,EAAE;wBACN,IAAI,EAAE,IAAI;qBACb;oBACD,OAAO,EAAE;wBACL,IAAI,EAAE,IAAI;qBACb;iBACJ;aACJ,CAAC;QACN,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7J,KAAI,CAAC,MAAM,CAAC,mBAAmB,GAAI,IAAI,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG;YAC9B,YAAY,EAAE,YAAY;SAC7B,CAAC;IACN,CAAC;IAxCQ;QAAR,YAAK,EAAE;;wDAAa;IADZ,oBAAoB;QAJhC,gBAAS,CAAC;YACP,QAAQ,EAAE,OAAO,CAAC,oCAAoC,CAAC;SAC1D,CAAC;iDAQ0B,iBAAU;YACR,4BAAY;YACZ,4BAAY;OAR7B,oBAAoB,CA0ChC;IAAD,2BAAC;CA1CD,AA0CC,IAAA;AA1CY,oDAAoB","file":"../../../src/board/modal-widget.component.js","sourcesContent":["import { Component, ElementRef, Input, ViewChild, ViewContainerRef } from '@angular/core';\r\n\r\nimport { AfterDialogInit, DialogResult } from 'core-services/core';\r\nimport { ChartService } from '../chart/chart.service';\r\nimport { BoardService } from './board.service';\r\n\r\n@Component({\r\n    template: require('./modal-widget.component.html!text')\r\n})\r\n\r\nexport class ModalWidgetComponent implements AfterDialogInit {\r\n    @Input() widget: any;\r\n\r\n    loading = false;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private boardService: BoardService,\r\n        private chartService: ChartService\r\n    ) {}\r\n\r\n    afterDialogInit(dialog: DialogResult, modalContent: any) {\r\n        let optionFilter = function(option: any) {\r\n            option.toolbox = {\r\n                feature: {\r\n                    dataView: {\r\n                        show: true,\r\n                        readOnly: true\r\n                    },\r\n                    magicType: {\r\n                        type: ['line', 'bar', 'stack', 'tiled']\r\n                    },\r\n                    dataZoom: {\r\n                        show: true\r\n                    },\r\n                    restore: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        this.loading = true;\r\n        this.widget = dialog.data.widget;\r\n        this.chartService.render($('.widget-view', this.elementRef.nativeElement), this.boardService.injectFilter(this.widget.widget).data, optionFilter).subscribe((data) => {\r\n            this.widget.modalRealTimeTicket =  data;\r\n            this.loading = false;\r\n        });\r\n        this.widget.modalRealTimeOption = {\r\n            optionFilter: optionFilter\r\n        };\r\n    }\r\n}\r\n"]}