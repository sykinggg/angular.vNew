{"version":3,"sources":["src/chart/chartScatter.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartScatter.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UpdateEchartOptionsService } from './common/updateechartOptions.service';\r\nimport { Render } from './render';\r\nvar numbro = require('numbro');\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\n\r\nexport class ChartScatterService {\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private updateEchartOptions: UpdateEchartOptionsService\r\n    ) {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist, drill, relations, chartConfig) {\r\n        let render = new Render(containerDom, option);\r\n\r\n        render.addClick(chartConfig, relations, this.activatedRoute);\r\n\r\n        return render.chart(null, persist);\r\n    };\r\n\r\n    public parseOption(data: any) {\r\n        var chartConfig = data.chartConfig;\r\n        var casted_keys = data.keys;\r\n        var casted_values = data.series;\r\n        var aggregate_data = data.data;\r\n        var newValuesConfig = data.seriesConfig;\r\n        var tunningOpt = chartConfig.option;\r\n\r\n        var string_keys = _.map(casted_keys, function (key) {\r\n            return key.join('-');\r\n        });\r\n        var series = [];\r\n        var valueName = [];\r\n\r\n        for (var i = 0; i < casted_values.length; i++) {\r\n            var joined_values = casted_values[i].join('-');\r\n            var valueAxisIndex = newValuesConfig[joined_values].valueAxisIndex;\r\n            var name = casted_values[i].slice(0, -1).join('-');\r\n\r\n            var s = _.find(series, function (_s) {\r\n                return _s.name == name;\r\n            });\r\n            if (!s) {\r\n                s = {name: name};\r\n                series.push(s);\r\n            }\r\n            if (valueAxisIndex == 0) {\r\n                s.yIdx = i;\r\n            }\r\n            if (valueAxisIndex == 1) {\r\n                s.sizeIdx = i;\r\n            }\r\n            if (valueAxisIndex == 2) {\r\n                s.colorIdx = i;\r\n            }\r\n            valueName[valueAxisIndex] = casted_values[i][casted_values[i].length - 1];\r\n        }\r\n        var data: any = _.unzip(aggregate_data);\r\n\r\n        _.each(series, function (s) {\r\n            s.data = _.map(data, function (d, i) {\r\n                return [string_keys[i], d[s.yIdx], d[s.sizeIdx] ? d[s.sizeIdx] : 1, d[s.colorIdx] ? d[s.colorIdx] : 1];\r\n            });\r\n            s.sizeMax = _.maxBy(s.data, function (d) {\r\n                return Number(d[2]);\r\n            })[2];\r\n            s.sizeMin = _.maxBy(s.data, function (d) {\r\n                return Number(d[2]);\r\n            })[2];\r\n            s.colorMax = _.maxBy(s.data, function (d) {\r\n                return Number(d[3]);\r\n            })[3];\r\n            s.colorMin = _.maxBy(s.data, function (d) {\r\n                return Number(d[3]);\r\n            })[3];\r\n        });\r\n        var sizeMax = _.maxBy(series, function (s) {\r\n            return Number(s.sizeMax);\r\n        }).sizeMax;\r\n        var sizeMin = _.maxBy(series, function (s) {\r\n            return Number(s.sizeMin);\r\n        }).sizeMin;\r\n        var colorMax = _.maxBy(series, function (s) {\r\n            return Number(s.colorMax);\r\n        }).colorMax;\r\n        var colorMin = _.maxBy(series, function (s) {\r\n            return Number(s.colorMin);\r\n        }).colorMin;\r\n\r\n        if (tunningOpt) {\r\n            var labelInterval, labelRotate;\r\n            tunningOpt.ctgLabelInterval ? labelInterval = tunningOpt.ctgLabelInterval : 'auto';\r\n            tunningOpt.ctgLabelRotate ? labelRotate = tunningOpt.ctgLabelRotate : 0;\r\n        }\r\n\r\n        var echartOption = {\r\n            legend: {\r\n                data: _.map(series, function (v) {\r\n                    return v.name;\r\n                })\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: function (params) {\r\n                    var s = params.seriesName + \" \" + params.value[0] + \"</br>\";\r\n                    for (var i = 1; i < params.value.length; i++) {\r\n                        if (valueName[i - 1] == undefined) continue;\r\n                        s += valueName[i - 1] + \" : \" + params.value[i] + \"<br>\"\r\n                    }\r\n                    return s;\r\n                }\r\n            },\r\n            xAxis: {\r\n                data: string_keys,\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        type: 'dashed'\r\n                    }\r\n                },\r\n                axisLabel: {\r\n                    interval: labelInterval,\r\n                    rotate: labelRotate\r\n                }\r\n            },\r\n            yAxis: {\r\n                axisLabel: {\r\n                    formatter: function (value) {\r\n                        return numbro(value).format(\"0a.[00]\");\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        type: 'dashed'\r\n                    }\r\n                },\r\n                scale: true\r\n            },\r\n            visualMap: [\r\n                {\r\n                    dimension: 2,\r\n                    show: false,\r\n                    min: sizeMin * 0.8,\r\n                    max: sizeMax * 1.5,\r\n                    calculable: true,\r\n                    precision: 0.1,\r\n                    textStyle: {\r\n                        color: 'white'\r\n                    },\r\n                    inRange: {\r\n                        symbolSize: [5, 70]\r\n                    }\r\n                },\r\n                {\r\n                    dimension: 3,\r\n                    show: false,\r\n                    min: colorMin,\r\n                    max: colorMax,\r\n                    inRange: {\r\n                        opacity: [0.2, 1]\r\n                    }\r\n\r\n                }],\r\n            series: _.map(series, function (v) {\r\n                var length = -1;\r\n                return {\r\n                    name: v.name,\r\n                    data: _.map(v.data, function (u) {\r\n                        length ++;\r\n                        return {\r\n                            name: string_keys[length],\r\n                            value: u\r\n                        }\r\n                    }),\r\n                    type: 'scatter'\r\n                };\r\n            })\r\n        };\r\n\r\n        this.updateEchartOptions.updateEchartOptions(chartConfig.option, echartOption);\r\n\r\n        return echartOption;\r\n    };\r\n}"]}