{"version":3,"sources":["src/chart/chartLiquidFill.service.ts"],"names":[],"mappings":"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","file":"../../../src/chart/chartLiquidFill.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Render } from './render';\r\nrequire('echarts-liquidfill');\r\n\r\n@Injectable()\r\n\r\nexport class ChartLiquidFillService {\r\n    constructor() {\r\n    }\r\n\r\n    public render(containerDom, option, scope, persist) {\r\n        if (option == null) {\r\n            containerDom.html(\"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">No Data!</div>\");\r\n            return null;\r\n        }\r\n        let height;\r\n\r\n        scope ? height = scope.myheight - 20 : null;\r\n\r\n        return new Render(containerDom, option).chart(height, persist);\r\n    };\r\n\r\n    public parseOption(data) {\r\n        var config = data.chartConfig;\r\n        var maxValue = config.values[0].maxValue ? config.values[0].maxValue : 100;\r\n\r\n        var animation = true;\r\n        if (config.animation == 'static') {\r\n            animation = false;\r\n        }\r\n\r\n        var style = config.values[0].style ? config.values[0].style : \"circle\";\r\n\r\n        var datas = [];\r\n        var value = data.data.length > 0 ? data.data[0][0] : 'N/A';\r\n        if (value != 'N/A' && value < maxValue) {\r\n            for (var i = 1; i < 5; i++) {\r\n                var percent = 1;\r\n                for (var j = 1; j < i; j++) {\r\n                    percent = percent * 0.95;\r\n                }\r\n                datas.push(value * percent / maxValue);\r\n            }\r\n        }\r\n        if(value != 'N/A' && value >= maxValue){\r\n            for( var i = 0;i < 5;i ++){\r\n                datas.push(1)\r\n            }\r\n        }\r\n\r\n        var option: any = {\r\n            series: [{\r\n                type: 'liquidFill',\r\n                shape: style,\r\n                data: datas,\r\n                waveAnimation: animation,\r\n                radius: '70%',\r\n                backgroundStyle: {\r\n                    borderWidth: 2,\r\n                    borderColor: '#156ACF'\r\n                },\r\n                outline: {\r\n                    show: false\r\n                }\r\n            }],\r\n            label:{\r\n                textStyle: {\r\n                    fontSize: 35,\r\n                    fontFamily: 'Lobster Two',\r\n                    color:\"#000\"\r\n                }\r\n            }\r\n        };\r\n\r\n        if(datas[0] == 1){\r\n            option.label.normal = {\r\n                formatter:\"I'm full.\"\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n}"]}