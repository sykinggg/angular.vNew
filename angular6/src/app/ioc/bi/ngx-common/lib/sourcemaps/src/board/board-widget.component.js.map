{"version":3,"sources":["src/board/board-widget.component.ts"],"names":[],"mappings":"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","file":"../../../src/board/board-widget.component.js","sourcesContent":["import { Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\nimport { DialogService } from 'core-services/core';\r\nimport { ChartService } from '../chart/chart.service';\r\nimport { BoardService } from './board.service';\r\nimport { ModalWidgetComponent } from './modal-widget.component';\r\n\r\n@Component({\r\n    selector: 'dashboard-widget',\r\n    template: require('./board-widget.component.html!text')\r\n})\r\n\r\nexport class BoardWidgetComponent implements OnInit {\r\n    @ViewChild('widgetView', {read: ViewContainerRef}) widgetView: ViewContainerRef;\r\n    @Input() widget: any;\r\n    @Input() row: any;\r\n    @Input() configurable: boolean;\r\n    @Input() readonly = false;\r\n\r\n    viewType: string;\r\n    height: string;\r\n    loading = false;\r\n\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private elementRef: ElementRef,\r\n        private router: Router,\r\n        private dialogService: DialogService,\r\n        private boardService: BoardService,\r\n        private chartService: ChartService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.loading = true;\r\n        this.height = (this.row.height ? (this.row.height - 44) : 300 + 'px') as string;\r\n        switch (this.widget.widget.data.config.chart_type) {\r\n            case 'map':\r\n                this.viewType = 'chartContent';\r\n                break;\r\n            case 'kpi':\r\n                this.height = 'auto';\r\n                this.viewType = 'kpiContent';\r\n               break;\r\n            case 'table':\r\n                this.viewType = 'chartContent';\r\n                break;\r\n            default:\r\n                this.viewType = 'echartContent';\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    modalTable(widget) {\r\n        this.dialogService.show({\r\n            title: widget.name,\r\n            contentComponent: ModalWidgetComponent,\r\n            componentFactoryResolver: this.componentFactoryResolver,\r\n            data: {\r\n                widget: widget\r\n            }\r\n        }, {\r\n            size: 'lg'\r\n        }).result.then((result) => {\r\n            console.log(`Closed with: ${result}`);\r\n        }, (reason) => {\r\n            console.log(`Dismissed ${reason}`);\r\n        });\r\n    }\r\n\r\n    modalChart(widget) {\r\n        this.dialogService.show({\r\n            title: widget.name,\r\n            contentComponent: ModalWidgetComponent,\r\n            componentFactoryResolver: this.componentFactoryResolver,\r\n            data: {\r\n                widget: widget\r\n        }, {\r\n            size: 'lg'\r\n        }).result.then((result) => {\r\n            if (widget.modalRealTimeTicket) {\r\n                delete widget.modalRealTimeTicket;\r\n            }\r\n            if (widget.modalRealTimeOption) {\r\n                delete widget.modalRealTimeOption;\r\n            }\r\n        }, (reason) => {\r\n            console.log(`Dismissed ${reason}`);\r\n        });\r\n    }\r\n\r\n    reload() {\r\n        if (this.row.params) {\r\n            this.boardService.paramToFilter(this.row.params);\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    config() {\r\n        let navigationExtras: NavigationExtras = {\r\n            queryParams: {\r\n                id: this.widget.widget.id\r\n            }\r\n        };\r\n\r\n        this.router.navigate(['/admin/config/widget'], navigationExtras);\r\n    }\r\n\r\n    private render(optionFilter?: any) {\r\n        let needReload = false;\r\n        let dataSetId = this.widget.widget.data.datasetId;\r\n        let dsReloadStatus = this.boardService.initDsReloadStatus(needReload);\r\n        let widgetData = this.boardService.injectFilter(this.widget.widget).data ;\r\n        // 百度地图特殊处理\r\n        let charType = widgetData.config.chart_type;\r\n\r\n        this.loading = true;\r\n        this.widget.show = true;\r\n        // avoid repeat load offline dataset data\r\n        if (dataSetId !== undefined) {\r\n            needReload = dsReloadStatus[dataSetId] ? true : false;\r\n\r\n            dsReloadStatus[dataSetId] =  false;\r\n        }\r\n        console.log(widgetData);\r\n        console.log(optionFilter);\r\n        console.log(needReload);\r\n        if (charType === 'chinaMapBmap') {\r\n            this.chartService.render($('.widget-view', this.elementRef.nativeElement), widgetData, optionFilter, needReload);\r\n            this.loading = false;\r\n        } else {\r\n            this.chartService.render($('.widget-view', this.elementRef.nativeElement), widgetData, optionFilter, needReload, null, this.widget.relations).subscribe((data) => {\r\n                this.widget.realTimeTicket = data;\r\n                this.loading = false;\r\n            });\r\n        }\r\n        this.widget.realTimeOption = {\r\n            ptionFilter: optionFilter\r\n        };\r\n    }\r\n}\r\n"]}